// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "custom_exp_double_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic custom_exp_double_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic custom_exp_double_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state1 = "1";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state2 = "10";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state3 = "100";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state4 = "1000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state5 = "10000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state6 = "100000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state12 = "100000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<49> custom_exp_double_s::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_1 = "1";
const sc_lv<1> custom_exp_double_s::ap_const_lv1_0 = "0";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_6 = "110";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_25 = "100101";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_2B = "101011";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_30 = "110000";
const sc_lv<64> custom_exp_double_s::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<4> custom_exp_double_s::ap_const_lv4_1 = "1";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_2C = "101100";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_26 = "100110";
const sc_lv<32> custom_exp_double_s::ap_const_lv32_7 = "111";
const sc_lv<4> custom_exp_double_s::ap_const_lv4_B = "1011";
const sc_lv<64> custom_exp_double_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> custom_exp_double_s::ap_const_lv1_1 = "1";
const bool custom_exp_double_s::ap_const_boolean_1 = true;

custom_exp_double_s::custom_exp_double_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dut_dadd_64ns_64ncud_U17 = new dut_dadd_64ns_64ncud<1,5,64,64,64>("dut_dadd_64ns_64ncud_U17");
    dut_dadd_64ns_64ncud_U17->clk(ap_clk);
    dut_dadd_64ns_64ncud_U17->reset(ap_rst);
    dut_dadd_64ns_64ncud_U17->din0(result_0_reg_36);
    dut_dadd_64ns_64ncud_U17->din1(term_reg_121);
    dut_dadd_64ns_64ncud_U17->ce(ap_var_for_const0);
    dut_dadd_64ns_64ncud_U17->dout(grp_fu_59_p2);
    dut_dmul_64ns_64ndEe_U18 = new dut_dmul_64ns_64ndEe<1,6,64,64,64>("dut_dmul_64ns_64ndEe_U18");
    dut_dmul_64ns_64ndEe_U18->clk(ap_clk);
    dut_dmul_64ns_64ndEe_U18->reset(ap_rst);
    dut_dmul_64ns_64ndEe_U18->din0(term_0_reg_24);
    dut_dmul_64ns_64ndEe_U18->din1(tmp_s_reg_116);
    dut_dmul_64ns_64ndEe_U18->ce(ap_var_for_const0);
    dut_dmul_64ns_64ndEe_U18->dout(grp_fu_64_p2);
    dut_ddiv_64ns_64neOg_U19 = new dut_ddiv_64ns_64neOg<1,31,64,64,64>("dut_ddiv_64ns_64neOg_U19");
    dut_ddiv_64ns_64neOg_U19->clk(ap_clk);
    dut_ddiv_64ns_64neOg_U19->reset(ap_rst);
    dut_ddiv_64ns_64neOg_U19->din0(x);
    dut_ddiv_64ns_64neOg_U19->din1(tmp_reg_111);
    dut_ddiv_64ns_64neOg_U19->ce(ap_var_for_const0);
    dut_ddiv_64ns_64neOg_U19->dout(grp_fu_69_p2);
    dut_sitodp_32ns_6hbi_U20 = new dut_sitodp_32ns_6hbi<1,6,32,64>("dut_sitodp_32ns_6hbi_U20");
    dut_sitodp_32ns_6hbi_U20->clk(ap_clk);
    dut_sitodp_32ns_6hbi_U20->reset(ap_rst);
    dut_sitodp_32ns_6hbi_U20->din0(grp_fu_73_p0);
    dut_sitodp_32ns_6hbi_U20->ce(ap_var_for_const0);
    dut_sitodp_32ns_6hbi_U20->dout(grp_fu_73_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln127_fu_81_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln127_fu_81_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln127_fu_81_p2 );
    sensitive << ( result_0_reg_36 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_grp_fu_73_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_48 );

    SC_METHOD(thread_i_fu_87_p2);
    sensitive << ( i_0_reg_48 );

    SC_METHOD(thread_icmp_ln127_fu_81_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_48 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln127_fu_81_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000001";
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "custom_exp_double_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_87_p2, "i_fu_87_p2");
    sc_trace(mVcdFile, i_reg_106, "i_reg_106");
    sc_trace(mVcdFile, icmp_ln127_fu_81_p2, "icmp_ln127_fu_81_p2");
    sc_trace(mVcdFile, grp_fu_73_p1, "grp_fu_73_p1");
    sc_trace(mVcdFile, tmp_reg_111, "tmp_reg_111");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_69_p2, "grp_fu_69_p2");
    sc_trace(mVcdFile, tmp_s_reg_116, "tmp_s_reg_116");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_fu_64_p2, "grp_fu_64_p2");
    sc_trace(mVcdFile, term_reg_121, "term_reg_121");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_fu_59_p2, "grp_fu_59_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, term_0_reg_24, "term_0_reg_24");
    sc_trace(mVcdFile, result_0_reg_36, "result_0_reg_36");
    sc_trace(mVcdFile, i_0_reg_48, "i_0_reg_48");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_73_p0, "grp_fu_73_p0");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

custom_exp_double_s::~custom_exp_double_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dut_dadd_64ns_64ncud_U17;
    delete dut_dmul_64ns_64ndEe_U18;
    delete dut_ddiv_64ns_64neOg_U19;
    delete dut_sitodp_32ns_6hbi_U20;
}

void custom_exp_double_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void custom_exp_double_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln127_fu_81_p2.read(), ap_const_lv1_1))) {
            ap_return_preg = result_0_reg_36.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        i_0_reg_48 = i_reg_106.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_48 = ap_const_lv4_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        result_0_reg_36 = grp_fu_59_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        result_0_reg_36 = ap_const_lv64_3FF0000000000000;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        term_0_reg_24 = term_reg_121.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        term_0_reg_24 = ap_const_lv64_3FF0000000000000;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln127_fu_81_p2.read(), ap_const_lv1_0))) {
        i_reg_106 = i_fu_87_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        term_reg_121 = grp_fu_64_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_reg_111 = grp_fu_73_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tmp_s_reg_116 = grp_fu_69_p2.read();
    }
}

void custom_exp_double_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void custom_exp_double_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void custom_exp_double_s::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void custom_exp_double_s::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void custom_exp_double_s::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void custom_exp_double_s::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void custom_exp_double_s::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void custom_exp_double_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void custom_exp_double_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void custom_exp_double_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln127_fu_81_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void custom_exp_double_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void custom_exp_double_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln127_fu_81_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void custom_exp_double_s::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln127_fu_81_p2.read(), ap_const_lv1_1))) {
        ap_return = result_0_reg_36.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void custom_exp_double_s::thread_grp_fu_73_p0() {
    grp_fu_73_p0 = esl_zext<32,4>(i_0_reg_48.read());
}

void custom_exp_double_s::thread_i_fu_87_p2() {
    i_fu_87_p2 = (!i_0_reg_48.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_48.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void custom_exp_double_s::thread_icmp_ln127_fu_81_p2() {
    icmp_ln127_fu_81_p2 = (!i_0_reg_48.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_48.read() == ap_const_lv4_B);
}

void custom_exp_double_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln127_fu_81_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

