// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_HH_
#define _dut_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "monte_carlo_both_pri.h"

namespace ap_rtl {

struct dut : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > strm_out_V_V_din;
    sc_in< sc_logic > strm_out_V_V_full_n;
    sc_out< sc_logic > strm_out_V_V_write;


    // Module declarations
    dut(sc_module_name name);
    SC_HAS_PROCESS(dut);

    ~dut();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    monte_carlo_both_pri* grp_monte_carlo_both_pri_fu_79;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > strm_out_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > result_call_reg_589;
    sc_signal< sc_logic > grp_monte_carlo_both_pri_fu_79_ap_ready;
    sc_signal< sc_logic > grp_monte_carlo_both_pri_fu_79_ap_done;
    sc_signal< sc_lv<32> > result_put_reg_594;
    sc_signal< sc_lv<32> > reg_V_fu_93_p1;
    sc_signal< sc_lv<32> > reg_V_reg_599;
    sc_signal< sc_lv<1> > p_Result_s_reg_604;
    sc_signal< sc_lv<24> > tmp_fu_126_p3;
    sc_signal< sc_lv<24> > tmp_reg_609;
    sc_signal< sc_lv<1> > icmp_ln278_fu_134_p2;
    sc_signal< sc_lv<1> > icmp_ln278_reg_614;
    sc_signal< sc_lv<1> > icmp_ln285_fu_162_p2;
    sc_signal< sc_lv<1> > icmp_ln285_reg_619;
    sc_signal< sc_lv<9> > sh_amt_1_fu_168_p2;
    sc_signal< sc_lv<9> > sh_amt_1_reg_624;
    sc_signal< sc_lv<1> > and_ln284_fu_228_p2;
    sc_signal< sc_lv<1> > and_ln284_reg_629;
    sc_signal< sc_lv<24> > select_ln285_fu_240_p3;
    sc_signal< sc_lv<24> > select_ln285_reg_634;
    sc_signal< sc_lv<1> > and_ln295_fu_260_p2;
    sc_signal< sc_lv<1> > and_ln295_reg_639;
    sc_signal< sc_lv<32> > tmp_V_fu_334_p3;
    sc_signal< sc_lv<32> > tmp_V_reg_644;
    sc_signal< sc_lv<32> > reg_V_1_fu_341_p1;
    sc_signal< sc_lv<32> > reg_V_1_reg_649;
    sc_signal< sc_lv<1> > p_Result_6_reg_654;
    sc_signal< sc_lv<24> > tmp_4_fu_374_p3;
    sc_signal< sc_lv<24> > tmp_4_reg_659;
    sc_signal< sc_lv<1> > icmp_ln278_1_fu_382_p2;
    sc_signal< sc_lv<1> > icmp_ln278_1_reg_664;
    sc_signal< sc_lv<1> > icmp_ln285_1_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln285_1_reg_669;
    sc_signal< sc_lv<9> > sh_amt_3_fu_416_p2;
    sc_signal< sc_lv<9> > sh_amt_3_reg_674;
    sc_signal< sc_lv<1> > and_ln284_1_fu_476_p2;
    sc_signal< sc_lv<1> > and_ln284_1_reg_679;
    sc_signal< sc_lv<24> > select_ln285_2_fu_488_p3;
    sc_signal< sc_lv<24> > select_ln285_2_reg_684;
    sc_signal< sc_lv<1> > and_ln295_1_fu_508_p2;
    sc_signal< sc_lv<1> > and_ln295_1_reg_689;
    sc_signal< sc_lv<32> > tmp_V_4_fu_582_p3;
    sc_signal< sc_lv<32> > tmp_V_4_reg_694;
    sc_signal< sc_logic > grp_monte_carlo_both_pri_fu_79_ap_start;
    sc_signal< sc_logic > grp_monte_carlo_both_pri_fu_79_ap_idle;
    sc_signal< sc_lv<32> > grp_monte_carlo_both_pri_fu_79_ap_return_0;
    sc_signal< sc_lv<32> > grp_monte_carlo_both_pri_fu_79_ap_return_1;
    sc_signal< sc_logic > grp_monte_carlo_both_pri_fu_79_ap_start_reg;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > p_Result_s_14_fu_108_p4;
    sc_signal< sc_lv<23> > trunc_ln270_fu_122_p1;
    sc_signal< sc_lv<31> > trunc_ln262_fu_96_p1;
    sc_signal< sc_lv<9> > exp_V_fu_118_p1;
    sc_signal< sc_lv<9> > sh_amt_fu_140_p2;
    sc_signal< sc_lv<4> > tmp_15_fu_174_p4;
    sc_signal< sc_lv<24> > sext_ln281_fu_146_p1;
    sc_signal< sc_lv<1> > icmp_ln282_fu_150_p2;
    sc_signal< sc_lv<1> > xor_ln278_fu_196_p2;
    sc_signal< sc_lv<1> > and_ln282_fu_202_p2;
    sc_signal< sc_lv<1> > or_ln282_fu_216_p2;
    sc_signal< sc_lv<1> > icmp_ln284_fu_156_p2;
    sc_signal< sc_lv<1> > xor_ln282_fu_222_p2;
    sc_signal< sc_lv<1> > and_ln285_fu_234_p2;
    sc_signal< sc_lv<24> > lshr_ln286_fu_190_p2;
    sc_signal< sc_lv<24> > select_ln282_fu_208_p3;
    sc_signal< sc_lv<1> > or_ln284_fu_248_p2;
    sc_signal< sc_lv<1> > icmp_ln295_fu_184_p2;
    sc_signal< sc_lv<1> > xor_ln284_fu_254_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_272_p3;
    sc_signal< sc_lv<32> > zext_ln283_fu_266_p1;
    sc_signal< sc_lv<32> > sext_ln294_fu_269_p1;
    sc_signal< sc_lv<32> > shl_ln297_fu_287_p2;
    sc_signal< sc_lv<32> > zext_ln285_fu_293_p1;
    sc_signal< sc_lv<32> > select_ln295_fu_296_p3;
    sc_signal< sc_lv<1> > xor_ln285_fu_310_p2;
    sc_signal< sc_lv<1> > and_ln285_1_fu_315_p2;
    sc_signal< sc_lv<32> > select_ln288_fu_279_p3;
    sc_signal< sc_lv<32> > select_ln278_fu_303_p3;
    sc_signal< sc_lv<32> > select_ln285_1_fu_320_p3;
    sc_signal< sc_lv<32> > sub_ln461_fu_328_p2;
    sc_signal< sc_lv<8> > p_Result_2_fu_356_p4;
    sc_signal< sc_lv<23> > trunc_ln270_1_fu_370_p1;
    sc_signal< sc_lv<31> > trunc_ln262_1_fu_344_p1;
    sc_signal< sc_lv<9> > exp_V_1_fu_366_p1;
    sc_signal< sc_lv<9> > sh_amt_2_fu_388_p2;
    sc_signal< sc_lv<4> > tmp_18_fu_422_p4;
    sc_signal< sc_lv<24> > sext_ln281_1_fu_394_p1;
    sc_signal< sc_lv<1> > icmp_ln282_1_fu_398_p2;
    sc_signal< sc_lv<1> > xor_ln278_1_fu_444_p2;
    sc_signal< sc_lv<1> > and_ln282_1_fu_450_p2;
    sc_signal< sc_lv<1> > or_ln282_1_fu_464_p2;
    sc_signal< sc_lv<1> > icmp_ln284_1_fu_404_p2;
    sc_signal< sc_lv<1> > xor_ln282_1_fu_470_p2;
    sc_signal< sc_lv<1> > and_ln285_2_fu_482_p2;
    sc_signal< sc_lv<24> > lshr_ln286_1_fu_438_p2;
    sc_signal< sc_lv<24> > select_ln282_1_fu_456_p3;
    sc_signal< sc_lv<1> > or_ln284_1_fu_496_p2;
    sc_signal< sc_lv<1> > icmp_ln295_1_fu_432_p2;
    sc_signal< sc_lv<1> > xor_ln284_1_fu_502_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_520_p3;
    sc_signal< sc_lv<32> > zext_ln283_1_fu_514_p1;
    sc_signal< sc_lv<32> > sext_ln294_1_fu_517_p1;
    sc_signal< sc_lv<32> > shl_ln297_1_fu_535_p2;
    sc_signal< sc_lv<32> > zext_ln285_1_fu_541_p1;
    sc_signal< sc_lv<32> > select_ln295_1_fu_544_p3;
    sc_signal< sc_lv<1> > xor_ln285_1_fu_558_p2;
    sc_signal< sc_lv<1> > and_ln285_3_fu_563_p2;
    sc_signal< sc_lv<32> > select_ln288_1_fu_527_p3;
    sc_signal< sc_lv<32> > select_ln278_1_fu_551_p3;
    sc_signal< sc_lv<32> > select_ln285_3_fu_568_p3;
    sc_signal< sc_lv<32> > sub_ln461_1_fu_576_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_F4240;
    static const sc_lv<32> ap_const_lv32_64;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<9> ap_const_lv9_96;
    static const sc_lv<8> ap_const_lv8_96;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<9> ap_const_lv9_19;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln282_1_fu_450_p2();
    void thread_and_ln282_fu_202_p2();
    void thread_and_ln284_1_fu_476_p2();
    void thread_and_ln284_fu_228_p2();
    void thread_and_ln285_1_fu_315_p2();
    void thread_and_ln285_2_fu_482_p2();
    void thread_and_ln285_3_fu_563_p2();
    void thread_and_ln285_fu_234_p2();
    void thread_and_ln295_1_fu_508_p2();
    void thread_and_ln295_fu_260_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exp_V_1_fu_366_p1();
    void thread_exp_V_fu_118_p1();
    void thread_grp_monte_carlo_both_pri_fu_79_ap_start();
    void thread_icmp_ln278_1_fu_382_p2();
    void thread_icmp_ln278_fu_134_p2();
    void thread_icmp_ln282_1_fu_398_p2();
    void thread_icmp_ln282_fu_150_p2();
    void thread_icmp_ln284_1_fu_404_p2();
    void thread_icmp_ln284_fu_156_p2();
    void thread_icmp_ln285_1_fu_410_p2();
    void thread_icmp_ln285_fu_162_p2();
    void thread_icmp_ln295_1_fu_432_p2();
    void thread_icmp_ln295_fu_184_p2();
    void thread_lshr_ln286_1_fu_438_p2();
    void thread_lshr_ln286_fu_190_p2();
    void thread_or_ln282_1_fu_464_p2();
    void thread_or_ln282_fu_216_p2();
    void thread_or_ln284_1_fu_496_p2();
    void thread_or_ln284_fu_248_p2();
    void thread_p_Result_2_fu_356_p4();
    void thread_p_Result_s_14_fu_108_p4();
    void thread_reg_V_1_fu_341_p1();
    void thread_reg_V_fu_93_p1();
    void thread_select_ln278_1_fu_551_p3();
    void thread_select_ln278_fu_303_p3();
    void thread_select_ln282_1_fu_456_p3();
    void thread_select_ln282_fu_208_p3();
    void thread_select_ln285_1_fu_320_p3();
    void thread_select_ln285_2_fu_488_p3();
    void thread_select_ln285_3_fu_568_p3();
    void thread_select_ln285_fu_240_p3();
    void thread_select_ln288_1_fu_527_p3();
    void thread_select_ln288_fu_279_p3();
    void thread_select_ln295_1_fu_544_p3();
    void thread_select_ln295_fu_296_p3();
    void thread_sext_ln281_1_fu_394_p1();
    void thread_sext_ln281_fu_146_p1();
    void thread_sext_ln294_1_fu_517_p1();
    void thread_sext_ln294_fu_269_p1();
    void thread_sh_amt_1_fu_168_p2();
    void thread_sh_amt_2_fu_388_p2();
    void thread_sh_amt_3_fu_416_p2();
    void thread_sh_amt_fu_140_p2();
    void thread_shl_ln297_1_fu_535_p2();
    void thread_shl_ln297_fu_287_p2();
    void thread_strm_out_V_V_blk_n();
    void thread_strm_out_V_V_din();
    void thread_strm_out_V_V_write();
    void thread_sub_ln461_1_fu_576_p2();
    void thread_sub_ln461_fu_328_p2();
    void thread_tmp_15_fu_174_p4();
    void thread_tmp_16_fu_272_p3();
    void thread_tmp_18_fu_422_p4();
    void thread_tmp_19_fu_520_p3();
    void thread_tmp_4_fu_374_p3();
    void thread_tmp_V_4_fu_582_p3();
    void thread_tmp_V_fu_334_p3();
    void thread_tmp_fu_126_p3();
    void thread_trunc_ln262_1_fu_344_p1();
    void thread_trunc_ln262_fu_96_p1();
    void thread_trunc_ln270_1_fu_370_p1();
    void thread_trunc_ln270_fu_122_p1();
    void thread_xor_ln278_1_fu_444_p2();
    void thread_xor_ln278_fu_196_p2();
    void thread_xor_ln282_1_fu_470_p2();
    void thread_xor_ln282_fu_222_p2();
    void thread_xor_ln284_1_fu_502_p2();
    void thread_xor_ln284_fu_254_p2();
    void thread_xor_ln285_1_fu_558_p2();
    void thread_xor_ln285_fu_310_p2();
    void thread_zext_ln283_1_fu_514_p1();
    void thread_zext_ln283_fu_266_p1();
    void thread_zext_ln285_1_fu_541_p1();
    void thread_zext_ln285_fu_293_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
