// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> dut::ap_ST_fsm_state1 = "1";
const sc_lv<8> dut::ap_ST_fsm_state2 = "10";
const sc_lv<8> dut::ap_ST_fsm_state3 = "100";
const sc_lv<8> dut::ap_ST_fsm_state4 = "1000";
const sc_lv<8> dut::ap_ST_fsm_state5 = "10000";
const sc_lv<8> dut::ap_ST_fsm_state6 = "100000";
const sc_lv<8> dut::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> dut::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<32> dut::ap_const_lv32_3 = "11";
const sc_lv<32> dut::ap_const_lv32_4 = "100";
const sc_lv<32> dut::ap_const_lv32_5 = "101";
const sc_lv<32> dut::ap_const_lv32_6 = "110";
const sc_lv<32> dut::ap_const_lv32_7 = "111";
const sc_lv<32> dut::ap_const_lv32_F4240 = "11110100001001000000";
const sc_lv<32> dut::ap_const_lv32_64 = "1100100";
const sc_lv<32> dut::ap_const_lv32_1F = "11111";
const sc_lv<32> dut::ap_const_lv32_17 = "10111";
const sc_lv<32> dut::ap_const_lv32_1E = "11110";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<31> dut::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<9> dut::ap_const_lv9_96 = "10010110";
const sc_lv<8> dut::ap_const_lv8_96 = "10010110";
const sc_lv<9> dut::ap_const_lv9_0 = "000000000";
const sc_lv<9> dut::ap_const_lv9_19 = "11001";
const sc_lv<32> dut::ap_const_lv32_8 = "1000";
const sc_lv<4> dut::ap_const_lv4_1 = "1";
const sc_lv<24> dut::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const bool dut::ap_const_boolean_1 = true;

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_monte_carlo_both_pri_fu_79 = new monte_carlo_both_pri("grp_monte_carlo_both_pri_fu_79");
    grp_monte_carlo_both_pri_fu_79->ap_clk(ap_clk);
    grp_monte_carlo_both_pri_fu_79->ap_rst(ap_rst);
    grp_monte_carlo_both_pri_fu_79->ap_start(grp_monte_carlo_both_pri_fu_79_ap_start);
    grp_monte_carlo_both_pri_fu_79->ap_done(grp_monte_carlo_both_pri_fu_79_ap_done);
    grp_monte_carlo_both_pri_fu_79->ap_idle(grp_monte_carlo_both_pri_fu_79_ap_idle);
    grp_monte_carlo_both_pri_fu_79->ap_ready(grp_monte_carlo_both_pri_fu_79_ap_ready);
    grp_monte_carlo_both_pri_fu_79->ap_return_0(grp_monte_carlo_both_pri_fu_79_ap_return_0);
    grp_monte_carlo_both_pri_fu_79->ap_return_1(grp_monte_carlo_both_pri_fu_79_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln282_1_fu_450_p2);
    sensitive << ( icmp_ln282_1_fu_398_p2 );
    sensitive << ( xor_ln278_1_fu_444_p2 );

    SC_METHOD(thread_and_ln282_fu_202_p2);
    sensitive << ( icmp_ln282_fu_150_p2 );
    sensitive << ( xor_ln278_fu_196_p2 );

    SC_METHOD(thread_and_ln284_1_fu_476_p2);
    sensitive << ( icmp_ln284_1_fu_404_p2 );
    sensitive << ( xor_ln282_1_fu_470_p2 );

    SC_METHOD(thread_and_ln284_fu_228_p2);
    sensitive << ( icmp_ln284_fu_156_p2 );
    sensitive << ( xor_ln282_fu_222_p2 );

    SC_METHOD(thread_and_ln285_1_fu_315_p2);
    sensitive << ( and_ln284_reg_629 );
    sensitive << ( xor_ln285_fu_310_p2 );

    SC_METHOD(thread_and_ln285_2_fu_482_p2);
    sensitive << ( icmp_ln285_1_fu_410_p2 );
    sensitive << ( and_ln284_1_fu_476_p2 );

    SC_METHOD(thread_and_ln285_3_fu_563_p2);
    sensitive << ( and_ln284_1_reg_679 );
    sensitive << ( xor_ln285_1_fu_558_p2 );

    SC_METHOD(thread_and_ln285_fu_234_p2);
    sensitive << ( icmp_ln285_fu_162_p2 );
    sensitive << ( and_ln284_fu_228_p2 );

    SC_METHOD(thread_and_ln295_1_fu_508_p2);
    sensitive << ( icmp_ln295_1_fu_432_p2 );
    sensitive << ( xor_ln284_1_fu_502_p2 );

    SC_METHOD(thread_and_ln295_fu_260_p2);
    sensitive << ( icmp_ln295_fu_184_p2 );
    sensitive << ( xor_ln284_fu_254_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( strm_out_V_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exp_V_1_fu_366_p1);
    sensitive << ( p_Result_2_fu_356_p4 );

    SC_METHOD(thread_exp_V_fu_118_p1);
    sensitive << ( p_Result_s_14_fu_108_p4 );

    SC_METHOD(thread_grp_monte_carlo_both_pri_fu_79_ap_start);
    sensitive << ( grp_monte_carlo_both_pri_fu_79_ap_start_reg );

    SC_METHOD(thread_icmp_ln278_1_fu_382_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( trunc_ln262_1_fu_344_p1 );

    SC_METHOD(thread_icmp_ln278_fu_134_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln262_fu_96_p1 );

    SC_METHOD(thread_icmp_ln282_1_fu_398_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( p_Result_2_fu_356_p4 );

    SC_METHOD(thread_icmp_ln282_fu_150_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Result_s_14_fu_108_p4 );

    SC_METHOD(thread_icmp_ln284_1_fu_404_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sh_amt_2_fu_388_p2 );

    SC_METHOD(thread_icmp_ln284_fu_156_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sh_amt_fu_140_p2 );

    SC_METHOD(thread_icmp_ln285_1_fu_410_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sh_amt_2_fu_388_p2 );

    SC_METHOD(thread_icmp_ln285_fu_162_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sh_amt_fu_140_p2 );

    SC_METHOD(thread_icmp_ln295_1_fu_432_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_18_fu_422_p4 );

    SC_METHOD(thread_icmp_ln295_fu_184_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_15_fu_174_p4 );

    SC_METHOD(thread_lshr_ln286_1_fu_438_p2);
    sensitive << ( tmp_4_fu_374_p3 );
    sensitive << ( sext_ln281_1_fu_394_p1 );

    SC_METHOD(thread_lshr_ln286_fu_190_p2);
    sensitive << ( tmp_fu_126_p3 );
    sensitive << ( sext_ln281_fu_146_p1 );

    SC_METHOD(thread_or_ln282_1_fu_464_p2);
    sensitive << ( icmp_ln278_1_fu_382_p2 );
    sensitive << ( icmp_ln282_1_fu_398_p2 );

    SC_METHOD(thread_or_ln282_fu_216_p2);
    sensitive << ( icmp_ln278_fu_134_p2 );
    sensitive << ( icmp_ln282_fu_150_p2 );

    SC_METHOD(thread_or_ln284_1_fu_496_p2);
    sensitive << ( or_ln282_1_fu_464_p2 );
    sensitive << ( icmp_ln284_1_fu_404_p2 );

    SC_METHOD(thread_or_ln284_fu_248_p2);
    sensitive << ( or_ln282_fu_216_p2 );
    sensitive << ( icmp_ln284_fu_156_p2 );

    SC_METHOD(thread_p_Result_2_fu_356_p4);
    sensitive << ( reg_V_1_fu_341_p1 );

    SC_METHOD(thread_p_Result_s_14_fu_108_p4);
    sensitive << ( reg_V_fu_93_p1 );

    SC_METHOD(thread_reg_V_1_fu_341_p1);
    sensitive << ( result_put_reg_594 );

    SC_METHOD(thread_reg_V_fu_93_p1);
    sensitive << ( result_call_reg_589 );

    SC_METHOD(thread_select_ln278_1_fu_551_p3);
    sensitive << ( icmp_ln278_1_reg_664 );
    sensitive << ( select_ln295_1_fu_544_p3 );

    SC_METHOD(thread_select_ln278_fu_303_p3);
    sensitive << ( icmp_ln278_reg_614 );
    sensitive << ( select_ln295_fu_296_p3 );

    SC_METHOD(thread_select_ln282_1_fu_456_p3);
    sensitive << ( tmp_4_fu_374_p3 );
    sensitive << ( and_ln282_1_fu_450_p2 );

    SC_METHOD(thread_select_ln282_fu_208_p3);
    sensitive << ( tmp_fu_126_p3 );
    sensitive << ( and_ln282_fu_202_p2 );

    SC_METHOD(thread_select_ln285_1_fu_320_p3);
    sensitive << ( and_ln285_1_fu_315_p2 );
    sensitive << ( select_ln288_fu_279_p3 );
    sensitive << ( select_ln278_fu_303_p3 );

    SC_METHOD(thread_select_ln285_2_fu_488_p3);
    sensitive << ( and_ln285_2_fu_482_p2 );
    sensitive << ( lshr_ln286_1_fu_438_p2 );
    sensitive << ( select_ln282_1_fu_456_p3 );

    SC_METHOD(thread_select_ln285_3_fu_568_p3);
    sensitive << ( and_ln285_3_fu_563_p2 );
    sensitive << ( select_ln288_1_fu_527_p3 );
    sensitive << ( select_ln278_1_fu_551_p3 );

    SC_METHOD(thread_select_ln285_fu_240_p3);
    sensitive << ( and_ln285_fu_234_p2 );
    sensitive << ( lshr_ln286_fu_190_p2 );
    sensitive << ( select_ln282_fu_208_p3 );

    SC_METHOD(thread_select_ln288_1_fu_527_p3);
    sensitive << ( tmp_19_fu_520_p3 );

    SC_METHOD(thread_select_ln288_fu_279_p3);
    sensitive << ( tmp_16_fu_272_p3 );

    SC_METHOD(thread_select_ln295_1_fu_544_p3);
    sensitive << ( and_ln295_1_reg_689 );
    sensitive << ( shl_ln297_1_fu_535_p2 );
    sensitive << ( zext_ln285_1_fu_541_p1 );

    SC_METHOD(thread_select_ln295_fu_296_p3);
    sensitive << ( and_ln295_reg_639 );
    sensitive << ( shl_ln297_fu_287_p2 );
    sensitive << ( zext_ln285_fu_293_p1 );

    SC_METHOD(thread_sext_ln281_1_fu_394_p1);
    sensitive << ( sh_amt_2_fu_388_p2 );

    SC_METHOD(thread_sext_ln281_fu_146_p1);
    sensitive << ( sh_amt_fu_140_p2 );

    SC_METHOD(thread_sext_ln294_1_fu_517_p1);
    sensitive << ( sh_amt_3_reg_674 );

    SC_METHOD(thread_sext_ln294_fu_269_p1);
    sensitive << ( sh_amt_1_reg_624 );

    SC_METHOD(thread_sh_amt_1_fu_168_p2);
    sensitive << ( sh_amt_fu_140_p2 );

    SC_METHOD(thread_sh_amt_2_fu_388_p2);
    sensitive << ( exp_V_1_fu_366_p1 );

    SC_METHOD(thread_sh_amt_3_fu_416_p2);
    sensitive << ( sh_amt_2_fu_388_p2 );

    SC_METHOD(thread_sh_amt_fu_140_p2);
    sensitive << ( exp_V_fu_118_p1 );

    SC_METHOD(thread_shl_ln297_1_fu_535_p2);
    sensitive << ( zext_ln283_1_fu_514_p1 );
    sensitive << ( sext_ln294_1_fu_517_p1 );

    SC_METHOD(thread_shl_ln297_fu_287_p2);
    sensitive << ( zext_ln283_fu_266_p1 );
    sensitive << ( sext_ln294_fu_269_p1 );

    SC_METHOD(thread_strm_out_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_strm_out_V_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_monte_carlo_both_pri_fu_79_ap_done );
    sensitive << ( tmp_V_reg_644 );
    sensitive << ( tmp_V_4_reg_694 );

    SC_METHOD(thread_strm_out_V_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_monte_carlo_both_pri_fu_79_ap_done );

    SC_METHOD(thread_sub_ln461_1_fu_576_p2);
    sensitive << ( select_ln285_3_fu_568_p3 );

    SC_METHOD(thread_sub_ln461_fu_328_p2);
    sensitive << ( select_ln285_1_fu_320_p3 );

    SC_METHOD(thread_tmp_15_fu_174_p4);
    sensitive << ( sh_amt_1_fu_168_p2 );

    SC_METHOD(thread_tmp_16_fu_272_p3);
    sensitive << ( reg_V_reg_599 );

    SC_METHOD(thread_tmp_18_fu_422_p4);
    sensitive << ( sh_amt_3_fu_416_p2 );

    SC_METHOD(thread_tmp_19_fu_520_p3);
    sensitive << ( reg_V_1_reg_649 );

    SC_METHOD(thread_tmp_4_fu_374_p3);
    sensitive << ( trunc_ln270_1_fu_370_p1 );

    SC_METHOD(thread_tmp_V_4_fu_582_p3);
    sensitive << ( p_Result_6_reg_654 );
    sensitive << ( select_ln285_3_fu_568_p3 );
    sensitive << ( sub_ln461_1_fu_576_p2 );

    SC_METHOD(thread_tmp_V_fu_334_p3);
    sensitive << ( p_Result_s_reg_604 );
    sensitive << ( select_ln285_1_fu_320_p3 );
    sensitive << ( sub_ln461_fu_328_p2 );

    SC_METHOD(thread_tmp_fu_126_p3);
    sensitive << ( trunc_ln270_fu_122_p1 );

    SC_METHOD(thread_trunc_ln262_1_fu_344_p1);
    sensitive << ( reg_V_1_fu_341_p1 );

    SC_METHOD(thread_trunc_ln262_fu_96_p1);
    sensitive << ( reg_V_fu_93_p1 );

    SC_METHOD(thread_trunc_ln270_1_fu_370_p1);
    sensitive << ( reg_V_1_fu_341_p1 );

    SC_METHOD(thread_trunc_ln270_fu_122_p1);
    sensitive << ( reg_V_fu_93_p1 );

    SC_METHOD(thread_xor_ln278_1_fu_444_p2);
    sensitive << ( icmp_ln278_1_fu_382_p2 );

    SC_METHOD(thread_xor_ln278_fu_196_p2);
    sensitive << ( icmp_ln278_fu_134_p2 );

    SC_METHOD(thread_xor_ln282_1_fu_470_p2);
    sensitive << ( or_ln282_1_fu_464_p2 );

    SC_METHOD(thread_xor_ln282_fu_222_p2);
    sensitive << ( or_ln282_fu_216_p2 );

    SC_METHOD(thread_xor_ln284_1_fu_502_p2);
    sensitive << ( or_ln284_1_fu_496_p2 );

    SC_METHOD(thread_xor_ln284_fu_254_p2);
    sensitive << ( or_ln284_fu_248_p2 );

    SC_METHOD(thread_xor_ln285_1_fu_558_p2);
    sensitive << ( icmp_ln285_1_reg_669 );

    SC_METHOD(thread_xor_ln285_fu_310_p2);
    sensitive << ( icmp_ln285_reg_619 );

    SC_METHOD(thread_zext_ln283_1_fu_514_p1);
    sensitive << ( tmp_4_reg_659 );

    SC_METHOD(thread_zext_ln283_fu_266_p1);
    sensitive << ( tmp_reg_609 );

    SC_METHOD(thread_zext_ln285_1_fu_541_p1);
    sensitive << ( select_ln285_2_reg_684 );

    SC_METHOD(thread_zext_ln285_fu_293_p1);
    sensitive << ( select_ln285_reg_634 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_monte_carlo_both_pri_fu_79_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    grp_monte_carlo_both_pri_fu_79_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_out_V_V_din, "(port)strm_out_V_V_din");
    sc_trace(mVcdFile, strm_out_V_V_full_n, "(port)strm_out_V_V_full_n");
    sc_trace(mVcdFile, strm_out_V_V_write, "(port)strm_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, strm_out_V_V_blk_n, "strm_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, result_call_reg_589, "result_call_reg_589");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_ready, "grp_monte_carlo_both_pri_fu_79_ap_ready");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_done, "grp_monte_carlo_both_pri_fu_79_ap_done");
    sc_trace(mVcdFile, result_put_reg_594, "result_put_reg_594");
    sc_trace(mVcdFile, reg_V_fu_93_p1, "reg_V_fu_93_p1");
    sc_trace(mVcdFile, reg_V_reg_599, "reg_V_reg_599");
    sc_trace(mVcdFile, p_Result_s_reg_604, "p_Result_s_reg_604");
    sc_trace(mVcdFile, tmp_fu_126_p3, "tmp_fu_126_p3");
    sc_trace(mVcdFile, tmp_reg_609, "tmp_reg_609");
    sc_trace(mVcdFile, icmp_ln278_fu_134_p2, "icmp_ln278_fu_134_p2");
    sc_trace(mVcdFile, icmp_ln278_reg_614, "icmp_ln278_reg_614");
    sc_trace(mVcdFile, icmp_ln285_fu_162_p2, "icmp_ln285_fu_162_p2");
    sc_trace(mVcdFile, icmp_ln285_reg_619, "icmp_ln285_reg_619");
    sc_trace(mVcdFile, sh_amt_1_fu_168_p2, "sh_amt_1_fu_168_p2");
    sc_trace(mVcdFile, sh_amt_1_reg_624, "sh_amt_1_reg_624");
    sc_trace(mVcdFile, and_ln284_fu_228_p2, "and_ln284_fu_228_p2");
    sc_trace(mVcdFile, and_ln284_reg_629, "and_ln284_reg_629");
    sc_trace(mVcdFile, select_ln285_fu_240_p3, "select_ln285_fu_240_p3");
    sc_trace(mVcdFile, select_ln285_reg_634, "select_ln285_reg_634");
    sc_trace(mVcdFile, and_ln295_fu_260_p2, "and_ln295_fu_260_p2");
    sc_trace(mVcdFile, and_ln295_reg_639, "and_ln295_reg_639");
    sc_trace(mVcdFile, tmp_V_fu_334_p3, "tmp_V_fu_334_p3");
    sc_trace(mVcdFile, tmp_V_reg_644, "tmp_V_reg_644");
    sc_trace(mVcdFile, reg_V_1_fu_341_p1, "reg_V_1_fu_341_p1");
    sc_trace(mVcdFile, reg_V_1_reg_649, "reg_V_1_reg_649");
    sc_trace(mVcdFile, p_Result_6_reg_654, "p_Result_6_reg_654");
    sc_trace(mVcdFile, tmp_4_fu_374_p3, "tmp_4_fu_374_p3");
    sc_trace(mVcdFile, tmp_4_reg_659, "tmp_4_reg_659");
    sc_trace(mVcdFile, icmp_ln278_1_fu_382_p2, "icmp_ln278_1_fu_382_p2");
    sc_trace(mVcdFile, icmp_ln278_1_reg_664, "icmp_ln278_1_reg_664");
    sc_trace(mVcdFile, icmp_ln285_1_fu_410_p2, "icmp_ln285_1_fu_410_p2");
    sc_trace(mVcdFile, icmp_ln285_1_reg_669, "icmp_ln285_1_reg_669");
    sc_trace(mVcdFile, sh_amt_3_fu_416_p2, "sh_amt_3_fu_416_p2");
    sc_trace(mVcdFile, sh_amt_3_reg_674, "sh_amt_3_reg_674");
    sc_trace(mVcdFile, and_ln284_1_fu_476_p2, "and_ln284_1_fu_476_p2");
    sc_trace(mVcdFile, and_ln284_1_reg_679, "and_ln284_1_reg_679");
    sc_trace(mVcdFile, select_ln285_2_fu_488_p3, "select_ln285_2_fu_488_p3");
    sc_trace(mVcdFile, select_ln285_2_reg_684, "select_ln285_2_reg_684");
    sc_trace(mVcdFile, and_ln295_1_fu_508_p2, "and_ln295_1_fu_508_p2");
    sc_trace(mVcdFile, and_ln295_1_reg_689, "and_ln295_1_reg_689");
    sc_trace(mVcdFile, tmp_V_4_fu_582_p3, "tmp_V_4_fu_582_p3");
    sc_trace(mVcdFile, tmp_V_4_reg_694, "tmp_V_4_reg_694");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_start, "grp_monte_carlo_both_pri_fu_79_ap_start");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_idle, "grp_monte_carlo_both_pri_fu_79_ap_idle");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_return_0, "grp_monte_carlo_both_pri_fu_79_ap_return_0");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_return_1, "grp_monte_carlo_both_pri_fu_79_ap_return_1");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_79_ap_start_reg, "grp_monte_carlo_both_pri_fu_79_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, p_Result_s_14_fu_108_p4, "p_Result_s_14_fu_108_p4");
    sc_trace(mVcdFile, trunc_ln270_fu_122_p1, "trunc_ln270_fu_122_p1");
    sc_trace(mVcdFile, trunc_ln262_fu_96_p1, "trunc_ln262_fu_96_p1");
    sc_trace(mVcdFile, exp_V_fu_118_p1, "exp_V_fu_118_p1");
    sc_trace(mVcdFile, sh_amt_fu_140_p2, "sh_amt_fu_140_p2");
    sc_trace(mVcdFile, tmp_15_fu_174_p4, "tmp_15_fu_174_p4");
    sc_trace(mVcdFile, sext_ln281_fu_146_p1, "sext_ln281_fu_146_p1");
    sc_trace(mVcdFile, icmp_ln282_fu_150_p2, "icmp_ln282_fu_150_p2");
    sc_trace(mVcdFile, xor_ln278_fu_196_p2, "xor_ln278_fu_196_p2");
    sc_trace(mVcdFile, and_ln282_fu_202_p2, "and_ln282_fu_202_p2");
    sc_trace(mVcdFile, or_ln282_fu_216_p2, "or_ln282_fu_216_p2");
    sc_trace(mVcdFile, icmp_ln284_fu_156_p2, "icmp_ln284_fu_156_p2");
    sc_trace(mVcdFile, xor_ln282_fu_222_p2, "xor_ln282_fu_222_p2");
    sc_trace(mVcdFile, and_ln285_fu_234_p2, "and_ln285_fu_234_p2");
    sc_trace(mVcdFile, lshr_ln286_fu_190_p2, "lshr_ln286_fu_190_p2");
    sc_trace(mVcdFile, select_ln282_fu_208_p3, "select_ln282_fu_208_p3");
    sc_trace(mVcdFile, or_ln284_fu_248_p2, "or_ln284_fu_248_p2");
    sc_trace(mVcdFile, icmp_ln295_fu_184_p2, "icmp_ln295_fu_184_p2");
    sc_trace(mVcdFile, xor_ln284_fu_254_p2, "xor_ln284_fu_254_p2");
    sc_trace(mVcdFile, tmp_16_fu_272_p3, "tmp_16_fu_272_p3");
    sc_trace(mVcdFile, zext_ln283_fu_266_p1, "zext_ln283_fu_266_p1");
    sc_trace(mVcdFile, sext_ln294_fu_269_p1, "sext_ln294_fu_269_p1");
    sc_trace(mVcdFile, shl_ln297_fu_287_p2, "shl_ln297_fu_287_p2");
    sc_trace(mVcdFile, zext_ln285_fu_293_p1, "zext_ln285_fu_293_p1");
    sc_trace(mVcdFile, select_ln295_fu_296_p3, "select_ln295_fu_296_p3");
    sc_trace(mVcdFile, xor_ln285_fu_310_p2, "xor_ln285_fu_310_p2");
    sc_trace(mVcdFile, and_ln285_1_fu_315_p2, "and_ln285_1_fu_315_p2");
    sc_trace(mVcdFile, select_ln288_fu_279_p3, "select_ln288_fu_279_p3");
    sc_trace(mVcdFile, select_ln278_fu_303_p3, "select_ln278_fu_303_p3");
    sc_trace(mVcdFile, select_ln285_1_fu_320_p3, "select_ln285_1_fu_320_p3");
    sc_trace(mVcdFile, sub_ln461_fu_328_p2, "sub_ln461_fu_328_p2");
    sc_trace(mVcdFile, p_Result_2_fu_356_p4, "p_Result_2_fu_356_p4");
    sc_trace(mVcdFile, trunc_ln270_1_fu_370_p1, "trunc_ln270_1_fu_370_p1");
    sc_trace(mVcdFile, trunc_ln262_1_fu_344_p1, "trunc_ln262_1_fu_344_p1");
    sc_trace(mVcdFile, exp_V_1_fu_366_p1, "exp_V_1_fu_366_p1");
    sc_trace(mVcdFile, sh_amt_2_fu_388_p2, "sh_amt_2_fu_388_p2");
    sc_trace(mVcdFile, tmp_18_fu_422_p4, "tmp_18_fu_422_p4");
    sc_trace(mVcdFile, sext_ln281_1_fu_394_p1, "sext_ln281_1_fu_394_p1");
    sc_trace(mVcdFile, icmp_ln282_1_fu_398_p2, "icmp_ln282_1_fu_398_p2");
    sc_trace(mVcdFile, xor_ln278_1_fu_444_p2, "xor_ln278_1_fu_444_p2");
    sc_trace(mVcdFile, and_ln282_1_fu_450_p2, "and_ln282_1_fu_450_p2");
    sc_trace(mVcdFile, or_ln282_1_fu_464_p2, "or_ln282_1_fu_464_p2");
    sc_trace(mVcdFile, icmp_ln284_1_fu_404_p2, "icmp_ln284_1_fu_404_p2");
    sc_trace(mVcdFile, xor_ln282_1_fu_470_p2, "xor_ln282_1_fu_470_p2");
    sc_trace(mVcdFile, and_ln285_2_fu_482_p2, "and_ln285_2_fu_482_p2");
    sc_trace(mVcdFile, lshr_ln286_1_fu_438_p2, "lshr_ln286_1_fu_438_p2");
    sc_trace(mVcdFile, select_ln282_1_fu_456_p3, "select_ln282_1_fu_456_p3");
    sc_trace(mVcdFile, or_ln284_1_fu_496_p2, "or_ln284_1_fu_496_p2");
    sc_trace(mVcdFile, icmp_ln295_1_fu_432_p2, "icmp_ln295_1_fu_432_p2");
    sc_trace(mVcdFile, xor_ln284_1_fu_502_p2, "xor_ln284_1_fu_502_p2");
    sc_trace(mVcdFile, tmp_19_fu_520_p3, "tmp_19_fu_520_p3");
    sc_trace(mVcdFile, zext_ln283_1_fu_514_p1, "zext_ln283_1_fu_514_p1");
    sc_trace(mVcdFile, sext_ln294_1_fu_517_p1, "sext_ln294_1_fu_517_p1");
    sc_trace(mVcdFile, shl_ln297_1_fu_535_p2, "shl_ln297_1_fu_535_p2");
    sc_trace(mVcdFile, zext_ln285_1_fu_541_p1, "zext_ln285_1_fu_541_p1");
    sc_trace(mVcdFile, select_ln295_1_fu_544_p3, "select_ln295_1_fu_544_p3");
    sc_trace(mVcdFile, xor_ln285_1_fu_558_p2, "xor_ln285_1_fu_558_p2");
    sc_trace(mVcdFile, and_ln285_3_fu_563_p2, "and_ln285_3_fu_563_p2");
    sc_trace(mVcdFile, select_ln288_1_fu_527_p3, "select_ln288_1_fu_527_p3");
    sc_trace(mVcdFile, select_ln278_1_fu_551_p3, "select_ln278_1_fu_551_p3");
    sc_trace(mVcdFile, select_ln285_3_fu_568_p3, "select_ln285_3_fu_568_p3");
    sc_trace(mVcdFile, sub_ln461_1_fu_576_p2, "sub_ln461_1_fu_576_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_monte_carlo_both_pri_fu_79;
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_monte_carlo_both_pri_fu_79_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
            grp_monte_carlo_both_pri_fu_79_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_monte_carlo_both_pri_fu_79_ap_ready.read())) {
            grp_monte_carlo_both_pri_fu_79_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        and_ln284_1_reg_679 = and_ln284_1_fu_476_p2.read();
        and_ln295_1_reg_689 = and_ln295_1_fu_508_p2.read();
        icmp_ln278_1_reg_664 = icmp_ln278_1_fu_382_p2.read();
        icmp_ln285_1_reg_669 = icmp_ln285_1_fu_410_p2.read();
        p_Result_6_reg_654 = reg_V_1_fu_341_p1.read().range(31, 31);
        reg_V_1_reg_649 = reg_V_1_fu_341_p1.read();
        select_ln285_2_reg_684 = select_ln285_2_fu_488_p3.read();
        sh_amt_3_reg_674 = sh_amt_3_fu_416_p2.read();
        tmp_4_reg_659 = tmp_4_fu_374_p3.read();
        tmp_V_reg_644 = tmp_V_fu_334_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        and_ln284_reg_629 = and_ln284_fu_228_p2.read();
        and_ln295_reg_639 = and_ln295_fu_260_p2.read();
        icmp_ln278_reg_614 = icmp_ln278_fu_134_p2.read();
        icmp_ln285_reg_619 = icmp_ln285_fu_162_p2.read();
        p_Result_s_reg_604 = reg_V_fu_93_p1.read().range(31, 31);
        reg_V_reg_599 = reg_V_fu_93_p1.read();
        select_ln285_reg_634 = select_ln285_fu_240_p3.read();
        sh_amt_1_reg_624 = sh_amt_1_fu_168_p2.read();
        tmp_reg_609 = tmp_fu_126_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_79_ap_done.read())))) {
        result_call_reg_589 = grp_monte_carlo_both_pri_fu_79_ap_return_0.read();
        result_put_reg_594 = grp_monte_carlo_both_pri_fu_79_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        tmp_V_4_reg_694 = tmp_V_4_fu_582_p3.read();
    }
}

void dut::thread_and_ln282_1_fu_450_p2() {
    and_ln282_1_fu_450_p2 = (icmp_ln282_1_fu_398_p2.read() & xor_ln278_1_fu_444_p2.read());
}

void dut::thread_and_ln282_fu_202_p2() {
    and_ln282_fu_202_p2 = (icmp_ln282_fu_150_p2.read() & xor_ln278_fu_196_p2.read());
}

void dut::thread_and_ln284_1_fu_476_p2() {
    and_ln284_1_fu_476_p2 = (icmp_ln284_1_fu_404_p2.read() & xor_ln282_1_fu_470_p2.read());
}

void dut::thread_and_ln284_fu_228_p2() {
    and_ln284_fu_228_p2 = (icmp_ln284_fu_156_p2.read() & xor_ln282_fu_222_p2.read());
}

void dut::thread_and_ln285_1_fu_315_p2() {
    and_ln285_1_fu_315_p2 = (and_ln284_reg_629.read() & xor_ln285_fu_310_p2.read());
}

void dut::thread_and_ln285_2_fu_482_p2() {
    and_ln285_2_fu_482_p2 = (and_ln284_1_fu_476_p2.read() & icmp_ln285_1_fu_410_p2.read());
}

void dut::thread_and_ln285_3_fu_563_p2() {
    and_ln285_3_fu_563_p2 = (and_ln284_1_reg_679.read() & xor_ln285_1_fu_558_p2.read());
}

void dut::thread_and_ln285_fu_234_p2() {
    and_ln285_fu_234_p2 = (and_ln284_fu_228_p2.read() & icmp_ln285_fu_162_p2.read());
}

void dut::thread_and_ln295_1_fu_508_p2() {
    and_ln295_1_fu_508_p2 = (icmp_ln295_1_fu_432_p2.read() & xor_ln284_1_fu_502_p2.read());
}

void dut::thread_and_ln295_fu_260_p2() {
    and_ln295_fu_260_p2 = (icmp_ln295_fu_184_p2.read() & xor_ln284_fu_254_p2.read());
}

void dut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dut::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dut::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dut::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dut::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()));
}

void dut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_exp_V_1_fu_366_p1() {
    exp_V_1_fu_366_p1 = esl_zext<9,8>(p_Result_2_fu_356_p4.read());
}

void dut::thread_exp_V_fu_118_p1() {
    exp_V_fu_118_p1 = esl_zext<9,8>(p_Result_s_14_fu_108_p4.read());
}

void dut::thread_grp_monte_carlo_both_pri_fu_79_ap_start() {
    grp_monte_carlo_both_pri_fu_79_ap_start = grp_monte_carlo_both_pri_fu_79_ap_start_reg.read();
}

void dut::thread_icmp_ln278_1_fu_382_p2() {
    icmp_ln278_1_fu_382_p2 = (!trunc_ln262_1_fu_344_p1.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln262_1_fu_344_p1.read() == ap_const_lv31_0);
}

void dut::thread_icmp_ln278_fu_134_p2() {
    icmp_ln278_fu_134_p2 = (!trunc_ln262_fu_96_p1.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln262_fu_96_p1.read() == ap_const_lv31_0);
}

void dut::thread_icmp_ln282_1_fu_398_p2() {
    icmp_ln282_1_fu_398_p2 = (!p_Result_2_fu_356_p4.read().is_01() || !ap_const_lv8_96.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_fu_356_p4.read() == ap_const_lv8_96);
}

void dut::thread_icmp_ln282_fu_150_p2() {
    icmp_ln282_fu_150_p2 = (!p_Result_s_14_fu_108_p4.read().is_01() || !ap_const_lv8_96.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_14_fu_108_p4.read() == ap_const_lv8_96);
}

void dut::thread_icmp_ln284_1_fu_404_p2() {
    icmp_ln284_1_fu_404_p2 = (!sh_amt_2_fu_388_p2.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(sh_amt_2_fu_388_p2.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void dut::thread_icmp_ln284_fu_156_p2() {
    icmp_ln284_fu_156_p2 = (!sh_amt_fu_140_p2.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(sh_amt_fu_140_p2.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void dut::thread_icmp_ln285_1_fu_410_p2() {
    icmp_ln285_1_fu_410_p2 = (!sh_amt_2_fu_388_p2.read().is_01() || !ap_const_lv9_19.is_01())? sc_lv<1>(): (sc_bigint<9>(sh_amt_2_fu_388_p2.read()) < sc_bigint<9>(ap_const_lv9_19));
}

void dut::thread_icmp_ln285_fu_162_p2() {
    icmp_ln285_fu_162_p2 = (!sh_amt_fu_140_p2.read().is_01() || !ap_const_lv9_19.is_01())? sc_lv<1>(): (sc_bigint<9>(sh_amt_fu_140_p2.read()) < sc_bigint<9>(ap_const_lv9_19));
}

void dut::thread_icmp_ln295_1_fu_432_p2() {
    icmp_ln295_1_fu_432_p2 = (!tmp_18_fu_422_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): (sc_bigint<4>(tmp_18_fu_422_p4.read()) < sc_bigint<4>(ap_const_lv4_1));
}

void dut::thread_icmp_ln295_fu_184_p2() {
    icmp_ln295_fu_184_p2 = (!tmp_15_fu_174_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): (sc_bigint<4>(tmp_15_fu_174_p4.read()) < sc_bigint<4>(ap_const_lv4_1));
}

void dut::thread_lshr_ln286_1_fu_438_p2() {
    lshr_ln286_1_fu_438_p2 = (!sext_ln281_1_fu_394_p1.read().is_01())? sc_lv<24>(): tmp_4_fu_374_p3.read() >> (unsigned short)sext_ln281_1_fu_394_p1.read().to_uint();
}

void dut::thread_lshr_ln286_fu_190_p2() {
    lshr_ln286_fu_190_p2 = (!sext_ln281_fu_146_p1.read().is_01())? sc_lv<24>(): tmp_fu_126_p3.read() >> (unsigned short)sext_ln281_fu_146_p1.read().to_uint();
}

void dut::thread_or_ln282_1_fu_464_p2() {
    or_ln282_1_fu_464_p2 = (icmp_ln278_1_fu_382_p2.read() | icmp_ln282_1_fu_398_p2.read());
}

void dut::thread_or_ln282_fu_216_p2() {
    or_ln282_fu_216_p2 = (icmp_ln278_fu_134_p2.read() | icmp_ln282_fu_150_p2.read());
}

void dut::thread_or_ln284_1_fu_496_p2() {
    or_ln284_1_fu_496_p2 = (or_ln282_1_fu_464_p2.read() | icmp_ln284_1_fu_404_p2.read());
}

void dut::thread_or_ln284_fu_248_p2() {
    or_ln284_fu_248_p2 = (or_ln282_fu_216_p2.read() | icmp_ln284_fu_156_p2.read());
}

void dut::thread_p_Result_2_fu_356_p4() {
    p_Result_2_fu_356_p4 = reg_V_1_fu_341_p1.read().range(30, 23);
}

void dut::thread_p_Result_s_14_fu_108_p4() {
    p_Result_s_14_fu_108_p4 = reg_V_fu_93_p1.read().range(30, 23);
}

void dut::thread_reg_V_1_fu_341_p1() {
    reg_V_1_fu_341_p1 = result_put_reg_594.read();
}

void dut::thread_reg_V_fu_93_p1() {
    reg_V_fu_93_p1 = result_call_reg_589.read();
}

void dut::thread_select_ln278_1_fu_551_p3() {
    select_ln278_1_fu_551_p3 = (!icmp_ln278_1_reg_664.read()[0].is_01())? sc_lv<32>(): ((icmp_ln278_1_reg_664.read()[0].to_bool())? ap_const_lv32_0: select_ln295_1_fu_544_p3.read());
}

void dut::thread_select_ln278_fu_303_p3() {
    select_ln278_fu_303_p3 = (!icmp_ln278_reg_614.read()[0].is_01())? sc_lv<32>(): ((icmp_ln278_reg_614.read()[0].to_bool())? ap_const_lv32_0: select_ln295_fu_296_p3.read());
}

void dut::thread_select_ln282_1_fu_456_p3() {
    select_ln282_1_fu_456_p3 = (!and_ln282_1_fu_450_p2.read()[0].is_01())? sc_lv<24>(): ((and_ln282_1_fu_450_p2.read()[0].to_bool())? tmp_4_fu_374_p3.read(): ap_const_lv24_0);
}

void dut::thread_select_ln282_fu_208_p3() {
    select_ln282_fu_208_p3 = (!and_ln282_fu_202_p2.read()[0].is_01())? sc_lv<24>(): ((and_ln282_fu_202_p2.read()[0].to_bool())? tmp_fu_126_p3.read(): ap_const_lv24_0);
}

void dut::thread_select_ln285_1_fu_320_p3() {
    select_ln285_1_fu_320_p3 = (!and_ln285_1_fu_315_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln285_1_fu_315_p2.read()[0].to_bool())? select_ln288_fu_279_p3.read(): select_ln278_fu_303_p3.read());
}

void dut::thread_select_ln285_2_fu_488_p3() {
    select_ln285_2_fu_488_p3 = (!and_ln285_2_fu_482_p2.read()[0].is_01())? sc_lv<24>(): ((and_ln285_2_fu_482_p2.read()[0].to_bool())? lshr_ln286_1_fu_438_p2.read(): select_ln282_1_fu_456_p3.read());
}

void dut::thread_select_ln285_3_fu_568_p3() {
    select_ln285_3_fu_568_p3 = (!and_ln285_3_fu_563_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln285_3_fu_563_p2.read()[0].to_bool())? select_ln288_1_fu_527_p3.read(): select_ln278_1_fu_551_p3.read());
}

void dut::thread_select_ln285_fu_240_p3() {
    select_ln285_fu_240_p3 = (!and_ln285_fu_234_p2.read()[0].is_01())? sc_lv<24>(): ((and_ln285_fu_234_p2.read()[0].to_bool())? lshr_ln286_fu_190_p2.read(): select_ln282_fu_208_p3.read());
}

void dut::thread_select_ln288_1_fu_527_p3() {
    select_ln288_1_fu_527_p3 = (!tmp_19_fu_520_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_19_fu_520_p3.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void dut::thread_select_ln288_fu_279_p3() {
    select_ln288_fu_279_p3 = (!tmp_16_fu_272_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_272_p3.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void dut::thread_select_ln295_1_fu_544_p3() {
    select_ln295_1_fu_544_p3 = (!and_ln295_1_reg_689.read()[0].is_01())? sc_lv<32>(): ((and_ln295_1_reg_689.read()[0].to_bool())? shl_ln297_1_fu_535_p2.read(): zext_ln285_1_fu_541_p1.read());
}

void dut::thread_select_ln295_fu_296_p3() {
    select_ln295_fu_296_p3 = (!and_ln295_reg_639.read()[0].is_01())? sc_lv<32>(): ((and_ln295_reg_639.read()[0].to_bool())? shl_ln297_fu_287_p2.read(): zext_ln285_fu_293_p1.read());
}

void dut::thread_sext_ln281_1_fu_394_p1() {
    sext_ln281_1_fu_394_p1 = esl_sext<24,9>(sh_amt_2_fu_388_p2.read());
}

void dut::thread_sext_ln281_fu_146_p1() {
    sext_ln281_fu_146_p1 = esl_sext<24,9>(sh_amt_fu_140_p2.read());
}

void dut::thread_sext_ln294_1_fu_517_p1() {
    sext_ln294_1_fu_517_p1 = esl_sext<32,9>(sh_amt_3_reg_674.read());
}

void dut::thread_sext_ln294_fu_269_p1() {
    sext_ln294_fu_269_p1 = esl_sext<32,9>(sh_amt_1_reg_624.read());
}

void dut::thread_sh_amt_1_fu_168_p2() {
    sh_amt_1_fu_168_p2 = (!ap_const_lv9_0.is_01() || !sh_amt_fu_140_p2.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_bigint<9>(sh_amt_fu_140_p2.read()));
}

void dut::thread_sh_amt_2_fu_388_p2() {
    sh_amt_2_fu_388_p2 = (!ap_const_lv9_96.is_01() || !exp_V_1_fu_366_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_96) - sc_biguint<9>(exp_V_1_fu_366_p1.read()));
}

void dut::thread_sh_amt_3_fu_416_p2() {
    sh_amt_3_fu_416_p2 = (!ap_const_lv9_0.is_01() || !sh_amt_2_fu_388_p2.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_bigint<9>(sh_amt_2_fu_388_p2.read()));
}

void dut::thread_sh_amt_fu_140_p2() {
    sh_amt_fu_140_p2 = (!ap_const_lv9_96.is_01() || !exp_V_fu_118_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_96) - sc_biguint<9>(exp_V_fu_118_p1.read()));
}

void dut::thread_shl_ln297_1_fu_535_p2() {
    shl_ln297_1_fu_535_p2 = (!sext_ln294_1_fu_517_p1.read().is_01())? sc_lv<32>(): zext_ln283_1_fu_514_p1.read() << (unsigned short)sext_ln294_1_fu_517_p1.read().to_uint();
}

void dut::thread_shl_ln297_fu_287_p2() {
    shl_ln297_fu_287_p2 = (!sext_ln294_fu_269_p1.read().is_01())? sc_lv<32>(): zext_ln283_fu_266_p1.read() << (unsigned short)sext_ln294_fu_269_p1.read().to_uint();
}

void dut::thread_strm_out_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        strm_out_V_V_blk_n = strm_out_V_V_full_n.read();
    } else {
        strm_out_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_out_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_din = tmp_V_4_reg_694.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_din = tmp_V_reg_644.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_din = ap_const_lv32_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_79_ap_done.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_din = ap_const_lv32_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_din = ap_const_lv32_64;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read())))) {
        strm_out_V_V_din = ap_const_lv32_F4240;
    } else {
        strm_out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_strm_out_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_79_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_write = ap_const_logic_1;
    } else {
        strm_out_V_V_write = ap_const_logic_0;
    }
}

void dut::thread_sub_ln461_1_fu_576_p2() {
    sub_ln461_1_fu_576_p2 = (!ap_const_lv32_0.is_01() || !select_ln285_3_fu_568_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(select_ln285_3_fu_568_p3.read()));
}

void dut::thread_sub_ln461_fu_328_p2() {
    sub_ln461_fu_328_p2 = (!ap_const_lv32_0.is_01() || !select_ln285_1_fu_320_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(select_ln285_1_fu_320_p3.read()));
}

void dut::thread_tmp_15_fu_174_p4() {
    tmp_15_fu_174_p4 = sh_amt_1_fu_168_p2.read().range(8, 5);
}

void dut::thread_tmp_16_fu_272_p3() {
    tmp_16_fu_272_p3 = reg_V_reg_599.read().range(31, 31);
}

void dut::thread_tmp_18_fu_422_p4() {
    tmp_18_fu_422_p4 = sh_amt_3_fu_416_p2.read().range(8, 5);
}

void dut::thread_tmp_19_fu_520_p3() {
    tmp_19_fu_520_p3 = reg_V_1_reg_649.read().range(31, 31);
}

void dut::thread_tmp_4_fu_374_p3() {
    tmp_4_fu_374_p3 = esl_concat<1,23>(ap_const_lv1_1, trunc_ln270_1_fu_370_p1.read());
}

void dut::thread_tmp_V_4_fu_582_p3() {
    tmp_V_4_fu_582_p3 = (!p_Result_6_reg_654.read()[0].is_01())? sc_lv<32>(): ((p_Result_6_reg_654.read()[0].to_bool())? sub_ln461_1_fu_576_p2.read(): select_ln285_3_fu_568_p3.read());
}

void dut::thread_tmp_V_fu_334_p3() {
    tmp_V_fu_334_p3 = (!p_Result_s_reg_604.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_604.read()[0].to_bool())? sub_ln461_fu_328_p2.read(): select_ln285_1_fu_320_p3.read());
}

void dut::thread_tmp_fu_126_p3() {
    tmp_fu_126_p3 = esl_concat<1,23>(ap_const_lv1_1, trunc_ln270_fu_122_p1.read());
}

void dut::thread_trunc_ln262_1_fu_344_p1() {
    trunc_ln262_1_fu_344_p1 = reg_V_1_fu_341_p1.read().range(31-1, 0);
}

void dut::thread_trunc_ln262_fu_96_p1() {
    trunc_ln262_fu_96_p1 = reg_V_fu_93_p1.read().range(31-1, 0);
}

void dut::thread_trunc_ln270_1_fu_370_p1() {
    trunc_ln270_1_fu_370_p1 = reg_V_1_fu_341_p1.read().range(23-1, 0);
}

void dut::thread_trunc_ln270_fu_122_p1() {
    trunc_ln270_fu_122_p1 = reg_V_fu_93_p1.read().range(23-1, 0);
}

void dut::thread_xor_ln278_1_fu_444_p2() {
    xor_ln278_1_fu_444_p2 = (icmp_ln278_1_fu_382_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln278_fu_196_p2() {
    xor_ln278_fu_196_p2 = (icmp_ln278_fu_134_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln282_1_fu_470_p2() {
    xor_ln282_1_fu_470_p2 = (or_ln282_1_fu_464_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln282_fu_222_p2() {
    xor_ln282_fu_222_p2 = (or_ln282_fu_216_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln284_1_fu_502_p2() {
    xor_ln284_1_fu_502_p2 = (or_ln284_1_fu_496_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln284_fu_254_p2() {
    xor_ln284_fu_254_p2 = (or_ln284_fu_248_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln285_1_fu_558_p2() {
    xor_ln285_1_fu_558_p2 = (icmp_ln285_1_reg_669.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln285_fu_310_p2() {
    xor_ln285_fu_310_p2 = (icmp_ln285_reg_619.read() ^ ap_const_lv1_1);
}

void dut::thread_zext_ln283_1_fu_514_p1() {
    zext_ln283_1_fu_514_p1 = esl_zext<32,24>(tmp_4_reg_659.read());
}

void dut::thread_zext_ln283_fu_266_p1() {
    zext_ln283_fu_266_p1 = esl_zext<32,24>(tmp_reg_609.read());
}

void dut::thread_zext_ln285_1_fu_541_p1() {
    zext_ln285_1_fu_541_p1 = esl_zext<32,24>(select_ln285_2_reg_684.read());
}

void dut::thread_zext_ln285_fu_293_p1() {
    zext_ln285_fu_293_p1 = esl_zext<32,24>(select_ln285_reg_634.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_79_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_din\" :  \"" << strm_out_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_V_full_n\" :  \"" << strm_out_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_write\" :  \"" << strm_out_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

