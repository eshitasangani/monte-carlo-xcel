// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> dut::ap_ST_fsm_state1 = "1";
const sc_lv<8> dut::ap_ST_fsm_state2 = "10";
const sc_lv<8> dut::ap_ST_fsm_state3 = "100";
const sc_lv<8> dut::ap_ST_fsm_state4 = "1000";
const sc_lv<8> dut::ap_ST_fsm_state5 = "10000";
const sc_lv<8> dut::ap_ST_fsm_state6 = "100000";
const sc_lv<8> dut::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> dut::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<32> dut::ap_const_lv32_3 = "11";
const sc_lv<32> dut::ap_const_lv32_4 = "100";
const sc_lv<32> dut::ap_const_lv32_5 = "101";
const sc_lv<32> dut::ap_const_lv32_6 = "110";
const sc_lv<32> dut::ap_const_lv32_7 = "111";
const sc_lv<32> dut::ap_const_lv32_989680 = "100110001001011010000000";
const sc_lv<32> dut::ap_const_lv32_64 = "1100100";
const sc_lv<32> dut::ap_const_lv32_3F = "111111";
const sc_lv<32> dut::ap_const_lv32_34 = "110100";
const sc_lv<32> dut::ap_const_lv32_3E = "111110";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<63> dut::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> dut::ap_const_lv12_433 = "10000110011";
const sc_lv<11> dut::ap_const_lv11_433 = "10000110011";
const sc_lv<12> dut::ap_const_lv12_0 = "000000000000";
const sc_lv<12> dut::ap_const_lv12_36 = "110110";
const sc_lv<32> dut::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> dut::ap_const_lv32_B = "1011";
const sc_lv<7> dut::ap_const_lv7_1 = "1";
const bool dut::ap_const_boolean_1 = true;

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_monte_carlo_both_pri_fu_87 = new monte_carlo_both_pri("grp_monte_carlo_both_pri_fu_87");
    grp_monte_carlo_both_pri_fu_87->ap_clk(ap_clk);
    grp_monte_carlo_both_pri_fu_87->ap_rst(ap_rst);
    grp_monte_carlo_both_pri_fu_87->ap_start(grp_monte_carlo_both_pri_fu_87_ap_start);
    grp_monte_carlo_both_pri_fu_87->ap_done(grp_monte_carlo_both_pri_fu_87_ap_done);
    grp_monte_carlo_both_pri_fu_87->ap_idle(grp_monte_carlo_both_pri_fu_87_ap_idle);
    grp_monte_carlo_both_pri_fu_87->ap_ready(grp_monte_carlo_both_pri_fu_87_ap_ready);
    grp_monte_carlo_both_pri_fu_87->ap_return_0(grp_monte_carlo_both_pri_fu_87_ap_return_0);
    grp_monte_carlo_both_pri_fu_87->ap_return_1(grp_monte_carlo_both_pri_fu_87_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln330_1_fu_505_p2);
    sensitive << ( icmp_ln330_1_reg_626 );
    sensitive << ( xor_ln326_1_fu_500_p2 );

    SC_METHOD(thread_and_ln330_fu_432_p2);
    sensitive << ( icmp_ln330_reg_584 );
    sensitive << ( xor_ln326_fu_427_p2 );

    SC_METHOD(thread_and_ln333_1_fu_228_p2);
    sensitive << ( icmp_ln332_fu_168_p2 );
    sensitive << ( and_ln333_fu_222_p2 );

    SC_METHOD(thread_and_ln333_2_fu_363_p2);
    sensitive << ( icmp_ln333_1_fu_315_p2 );
    sensitive << ( xor_ln330_1_fu_357_p2 );

    SC_METHOD(thread_and_ln333_3_fu_369_p2);
    sensitive << ( icmp_ln332_1_fu_309_p2 );
    sensitive << ( and_ln333_2_fu_363_p2 );

    SC_METHOD(thread_and_ln333_fu_222_p2);
    sensitive << ( icmp_ln333_fu_174_p2 );
    sensitive << ( xor_ln330_fu_216_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( strm_out_V_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exp_V_1_fu_267_p1);
    sensitive << ( p_Result_2_fu_257_p4 );

    SC_METHOD(thread_exp_V_fu_126_p1);
    sensitive << ( p_Result_s_9_fu_116_p4 );

    SC_METHOD(thread_grp_monte_carlo_both_pri_fu_87_ap_start);
    sensitive << ( grp_monte_carlo_both_pri_fu_87_ap_start_reg );

    SC_METHOD(thread_icmp_ln326_1_fu_287_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln310_1_fu_245_p1 );

    SC_METHOD(thread_icmp_ln326_fu_146_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln310_fu_104_p1 );

    SC_METHOD(thread_icmp_ln330_1_fu_303_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Result_2_fu_257_p4 );

    SC_METHOD(thread_icmp_ln330_fu_162_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Result_s_9_fu_116_p4 );

    SC_METHOD(thread_icmp_ln332_1_fu_309_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sh_amt_2_fu_293_p2 );

    SC_METHOD(thread_icmp_ln332_fu_168_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sh_amt_fu_152_p2 );

    SC_METHOD(thread_icmp_ln333_1_fu_315_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sh_amt_2_fu_293_p2 );

    SC_METHOD(thread_icmp_ln333_fu_174_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sh_amt_fu_152_p2 );

    SC_METHOD(thread_icmp_ln343_1_fu_475_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_6_fu_465_p4 );

    SC_METHOD(thread_icmp_ln343_fu_402_p2);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_3_fu_392_p4 );

    SC_METHOD(thread_lshr_ln334_1_fu_325_p2);
    sensitive << ( tmp_1_fu_279_p3 );
    sensitive << ( zext_ln334_1_fu_321_p1 );

    SC_METHOD(thread_lshr_ln334_fu_184_p2);
    sensitive << ( tmp_fu_138_p3 );
    sensitive << ( zext_ln334_fu_180_p1 );

    SC_METHOD(thread_or_ln330_1_fu_351_p2);
    sensitive << ( icmp_ln326_1_fu_287_p2 );
    sensitive << ( icmp_ln330_1_fu_303_p2 );

    SC_METHOD(thread_or_ln330_fu_210_p2);
    sensitive << ( icmp_ln326_fu_146_p2 );
    sensitive << ( icmp_ln330_fu_162_p2 );

    SC_METHOD(thread_or_ln332_1_fu_517_p2);
    sensitive << ( icmp_ln332_1_reg_631 );
    sensitive << ( or_ln330_1_reg_636 );

    SC_METHOD(thread_or_ln332_fu_444_p2);
    sensitive << ( icmp_ln332_reg_589 );
    sensitive << ( or_ln330_reg_594 );

    SC_METHOD(thread_p_Result_2_fu_257_p4);
    sensitive << ( reg_V_1_fu_242_p1 );

    SC_METHOD(thread_p_Result_s_9_fu_116_p4);
    sensitive << ( reg_V_fu_101_p1 );

    SC_METHOD(thread_reg_V_1_fu_242_p1);
    sensitive << ( result_put_reg_557 );

    SC_METHOD(thread_reg_V_fu_101_p1);
    sensitive << ( result_call_reg_552 );

    SC_METHOD(thread_select_ln326_1_fu_494_p3);
    sensitive << ( icmp_ln326_1_reg_615 );
    sensitive << ( select_ln333_1_reg_641 );

    SC_METHOD(thread_select_ln326_fu_421_p3);
    sensitive << ( icmp_ln326_reg_573 );
    sensitive << ( select_ln333_reg_599 );

    SC_METHOD(thread_select_ln330_1_fu_510_p3);
    sensitive << ( trunc_ln331_1_reg_609 );
    sensitive << ( and_ln330_1_fu_505_p2 );
    sensitive << ( select_ln326_1_fu_494_p3 );

    SC_METHOD(thread_select_ln330_fu_437_p3);
    sensitive << ( trunc_ln331_reg_567 );
    sensitive << ( and_ln330_fu_432_p2 );
    sensitive << ( select_ln326_fu_421_p3 );

    SC_METHOD(thread_select_ln332_1_fu_521_p3);
    sensitive << ( or_ln332_1_fu_517_p2 );
    sensitive << ( select_ln330_1_fu_510_p3 );
    sensitive << ( select_ln343_1_fu_486_p3 );

    SC_METHOD(thread_select_ln332_fu_448_p3);
    sensitive << ( or_ln332_fu_444_p2 );
    sensitive << ( select_ln330_fu_437_p3 );
    sensitive << ( select_ln343_fu_413_p3 );

    SC_METHOD(thread_select_ln333_1_fu_375_p3);
    sensitive << ( and_ln333_3_fu_369_p2 );
    sensitive << ( trunc_ln334_1_fu_331_p1 );
    sensitive << ( select_ln336_1_fu_343_p3 );

    SC_METHOD(thread_select_ln333_fu_234_p3);
    sensitive << ( and_ln333_1_fu_228_p2 );
    sensitive << ( trunc_ln334_fu_190_p1 );
    sensitive << ( select_ln336_fu_202_p3 );

    SC_METHOD(thread_select_ln336_1_fu_343_p3);
    sensitive << ( tmp_7_fu_335_p3 );

    SC_METHOD(thread_select_ln336_fu_202_p3);
    sensitive << ( tmp_4_fu_194_p3 );

    SC_METHOD(thread_select_ln343_1_fu_486_p3);
    sensitive << ( icmp_ln343_1_fu_475_p2 );
    sensitive << ( shl_ln345_1_fu_481_p2 );

    SC_METHOD(thread_select_ln343_fu_413_p3);
    sensitive << ( icmp_ln343_fu_402_p2 );
    sensitive << ( shl_ln345_fu_408_p2 );

    SC_METHOD(thread_sext_ln329_1_fu_299_p1);
    sensitive << ( sh_amt_2_fu_293_p2 );

    SC_METHOD(thread_sext_ln329_fu_158_p1);
    sensitive << ( sh_amt_fu_152_p2 );

    SC_METHOD(thread_sext_ln342_1_fu_461_p1);
    sensitive << ( sh_amt_3_fu_456_p2 );

    SC_METHOD(thread_sext_ln342_fu_388_p1);
    sensitive << ( sh_amt_1_fu_383_p2 );

    SC_METHOD(thread_sh_amt_1_fu_383_p2);
    sensitive << ( sh_amt_reg_579 );

    SC_METHOD(thread_sh_amt_2_fu_293_p2);
    sensitive << ( exp_V_1_fu_267_p1 );

    SC_METHOD(thread_sh_amt_3_fu_456_p2);
    sensitive << ( sh_amt_2_reg_621 );

    SC_METHOD(thread_sh_amt_fu_152_p2);
    sensitive << ( exp_V_fu_126_p1 );

    SC_METHOD(thread_shl_ln345_1_fu_481_p2);
    sensitive << ( trunc_ln331_1_reg_609 );
    sensitive << ( sext_ln342_1_fu_461_p1 );

    SC_METHOD(thread_shl_ln345_fu_408_p2);
    sensitive << ( trunc_ln331_reg_567 );
    sensitive << ( sext_ln342_fu_388_p1 );

    SC_METHOD(thread_strm_out_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_strm_out_V_V_din);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_monte_carlo_both_pri_fu_87_ap_done );
    sensitive << ( tmp_V_1_reg_658 );
    sensitive << ( tmp_V_fu_534_p3 );

    SC_METHOD(thread_strm_out_V_V_write);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_monte_carlo_both_pri_fu_87_ap_done );

    SC_METHOD(thread_sub_ln461_1_fu_541_p2);
    sensitive << ( select_ln332_1_reg_652 );

    SC_METHOD(thread_sub_ln461_fu_529_p2);
    sensitive << ( select_ln332_reg_646 );

    SC_METHOD(thread_tmp_1_fu_279_p3);
    sensitive << ( trunc_ln318_1_fu_271_p1 );

    SC_METHOD(thread_tmp_3_fu_392_p4);
    sensitive << ( sh_amt_1_fu_383_p2 );

    SC_METHOD(thread_tmp_4_fu_194_p3);
    sensitive << ( reg_V_fu_101_p1 );

    SC_METHOD(thread_tmp_6_fu_465_p4);
    sensitive << ( sh_amt_3_fu_456_p2 );

    SC_METHOD(thread_tmp_7_fu_335_p3);
    sensitive << ( reg_V_1_fu_242_p1 );

    SC_METHOD(thread_tmp_V_1_fu_546_p3);
    sensitive << ( p_Result_1_reg_604 );
    sensitive << ( select_ln332_1_reg_652 );
    sensitive << ( sub_ln461_1_fu_541_p2 );

    SC_METHOD(thread_tmp_V_fu_534_p3);
    sensitive << ( p_Result_s_reg_562 );
    sensitive << ( select_ln332_reg_646 );
    sensitive << ( sub_ln461_fu_529_p2 );

    SC_METHOD(thread_tmp_fu_138_p3);
    sensitive << ( trunc_ln318_fu_130_p1 );

    SC_METHOD(thread_trunc_ln310_1_fu_245_p1);
    sensitive << ( reg_V_1_fu_242_p1 );

    SC_METHOD(thread_trunc_ln310_fu_104_p1);
    sensitive << ( reg_V_fu_101_p1 );

    SC_METHOD(thread_trunc_ln318_1_fu_271_p1);
    sensitive << ( reg_V_1_fu_242_p1 );

    SC_METHOD(thread_trunc_ln318_fu_130_p1);
    sensitive << ( reg_V_fu_101_p1 );

    SC_METHOD(thread_trunc_ln331_1_fu_275_p1);
    sensitive << ( reg_V_1_fu_242_p1 );

    SC_METHOD(thread_trunc_ln331_fu_134_p1);
    sensitive << ( reg_V_fu_101_p1 );

    SC_METHOD(thread_trunc_ln334_1_fu_331_p1);
    sensitive << ( lshr_ln334_1_fu_325_p2 );

    SC_METHOD(thread_trunc_ln334_fu_190_p1);
    sensitive << ( lshr_ln334_fu_184_p2 );

    SC_METHOD(thread_xor_ln326_1_fu_500_p2);
    sensitive << ( icmp_ln326_1_reg_615 );

    SC_METHOD(thread_xor_ln326_fu_427_p2);
    sensitive << ( icmp_ln326_reg_573 );

    SC_METHOD(thread_xor_ln330_1_fu_357_p2);
    sensitive << ( or_ln330_1_fu_351_p2 );

    SC_METHOD(thread_xor_ln330_fu_216_p2);
    sensitive << ( or_ln330_fu_210_p2 );

    SC_METHOD(thread_zext_ln334_1_fu_321_p1);
    sensitive << ( sext_ln329_1_fu_299_p1 );

    SC_METHOD(thread_zext_ln334_fu_180_p1);
    sensitive << ( sext_ln329_fu_158_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_monte_carlo_both_pri_fu_87_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    grp_monte_carlo_both_pri_fu_87_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_out_V_V_din, "(port)strm_out_V_V_din");
    sc_trace(mVcdFile, strm_out_V_V_full_n, "(port)strm_out_V_V_full_n");
    sc_trace(mVcdFile, strm_out_V_V_write, "(port)strm_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, strm_out_V_V_blk_n, "strm_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, result_call_reg_552, "result_call_reg_552");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_ready, "grp_monte_carlo_both_pri_fu_87_ap_ready");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_done, "grp_monte_carlo_both_pri_fu_87_ap_done");
    sc_trace(mVcdFile, result_put_reg_557, "result_put_reg_557");
    sc_trace(mVcdFile, p_Result_s_reg_562, "p_Result_s_reg_562");
    sc_trace(mVcdFile, trunc_ln331_fu_134_p1, "trunc_ln331_fu_134_p1");
    sc_trace(mVcdFile, trunc_ln331_reg_567, "trunc_ln331_reg_567");
    sc_trace(mVcdFile, icmp_ln326_fu_146_p2, "icmp_ln326_fu_146_p2");
    sc_trace(mVcdFile, icmp_ln326_reg_573, "icmp_ln326_reg_573");
    sc_trace(mVcdFile, sh_amt_fu_152_p2, "sh_amt_fu_152_p2");
    sc_trace(mVcdFile, sh_amt_reg_579, "sh_amt_reg_579");
    sc_trace(mVcdFile, icmp_ln330_fu_162_p2, "icmp_ln330_fu_162_p2");
    sc_trace(mVcdFile, icmp_ln330_reg_584, "icmp_ln330_reg_584");
    sc_trace(mVcdFile, icmp_ln332_fu_168_p2, "icmp_ln332_fu_168_p2");
    sc_trace(mVcdFile, icmp_ln332_reg_589, "icmp_ln332_reg_589");
    sc_trace(mVcdFile, or_ln330_fu_210_p2, "or_ln330_fu_210_p2");
    sc_trace(mVcdFile, or_ln330_reg_594, "or_ln330_reg_594");
    sc_trace(mVcdFile, select_ln333_fu_234_p3, "select_ln333_fu_234_p3");
    sc_trace(mVcdFile, select_ln333_reg_599, "select_ln333_reg_599");
    sc_trace(mVcdFile, p_Result_1_reg_604, "p_Result_1_reg_604");
    sc_trace(mVcdFile, trunc_ln331_1_fu_275_p1, "trunc_ln331_1_fu_275_p1");
    sc_trace(mVcdFile, trunc_ln331_1_reg_609, "trunc_ln331_1_reg_609");
    sc_trace(mVcdFile, icmp_ln326_1_fu_287_p2, "icmp_ln326_1_fu_287_p2");
    sc_trace(mVcdFile, icmp_ln326_1_reg_615, "icmp_ln326_1_reg_615");
    sc_trace(mVcdFile, sh_amt_2_fu_293_p2, "sh_amt_2_fu_293_p2");
    sc_trace(mVcdFile, sh_amt_2_reg_621, "sh_amt_2_reg_621");
    sc_trace(mVcdFile, icmp_ln330_1_fu_303_p2, "icmp_ln330_1_fu_303_p2");
    sc_trace(mVcdFile, icmp_ln330_1_reg_626, "icmp_ln330_1_reg_626");
    sc_trace(mVcdFile, icmp_ln332_1_fu_309_p2, "icmp_ln332_1_fu_309_p2");
    sc_trace(mVcdFile, icmp_ln332_1_reg_631, "icmp_ln332_1_reg_631");
    sc_trace(mVcdFile, or_ln330_1_fu_351_p2, "or_ln330_1_fu_351_p2");
    sc_trace(mVcdFile, or_ln330_1_reg_636, "or_ln330_1_reg_636");
    sc_trace(mVcdFile, select_ln333_1_fu_375_p3, "select_ln333_1_fu_375_p3");
    sc_trace(mVcdFile, select_ln333_1_reg_641, "select_ln333_1_reg_641");
    sc_trace(mVcdFile, select_ln332_fu_448_p3, "select_ln332_fu_448_p3");
    sc_trace(mVcdFile, select_ln332_reg_646, "select_ln332_reg_646");
    sc_trace(mVcdFile, select_ln332_1_fu_521_p3, "select_ln332_1_fu_521_p3");
    sc_trace(mVcdFile, select_ln332_1_reg_652, "select_ln332_1_reg_652");
    sc_trace(mVcdFile, tmp_V_1_fu_546_p3, "tmp_V_1_fu_546_p3");
    sc_trace(mVcdFile, tmp_V_1_reg_658, "tmp_V_1_reg_658");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_start, "grp_monte_carlo_both_pri_fu_87_ap_start");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_idle, "grp_monte_carlo_both_pri_fu_87_ap_idle");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_return_0, "grp_monte_carlo_both_pri_fu_87_ap_return_0");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_return_1, "grp_monte_carlo_both_pri_fu_87_ap_return_1");
    sc_trace(mVcdFile, grp_monte_carlo_both_pri_fu_87_ap_start_reg, "grp_monte_carlo_both_pri_fu_87_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_V_fu_534_p3, "tmp_V_fu_534_p3");
    sc_trace(mVcdFile, reg_V_fu_101_p1, "reg_V_fu_101_p1");
    sc_trace(mVcdFile, p_Result_s_9_fu_116_p4, "p_Result_s_9_fu_116_p4");
    sc_trace(mVcdFile, trunc_ln318_fu_130_p1, "trunc_ln318_fu_130_p1");
    sc_trace(mVcdFile, trunc_ln310_fu_104_p1, "trunc_ln310_fu_104_p1");
    sc_trace(mVcdFile, exp_V_fu_126_p1, "exp_V_fu_126_p1");
    sc_trace(mVcdFile, sext_ln329_fu_158_p1, "sext_ln329_fu_158_p1");
    sc_trace(mVcdFile, tmp_fu_138_p3, "tmp_fu_138_p3");
    sc_trace(mVcdFile, zext_ln334_fu_180_p1, "zext_ln334_fu_180_p1");
    sc_trace(mVcdFile, lshr_ln334_fu_184_p2, "lshr_ln334_fu_184_p2");
    sc_trace(mVcdFile, tmp_4_fu_194_p3, "tmp_4_fu_194_p3");
    sc_trace(mVcdFile, icmp_ln333_fu_174_p2, "icmp_ln333_fu_174_p2");
    sc_trace(mVcdFile, xor_ln330_fu_216_p2, "xor_ln330_fu_216_p2");
    sc_trace(mVcdFile, and_ln333_fu_222_p2, "and_ln333_fu_222_p2");
    sc_trace(mVcdFile, and_ln333_1_fu_228_p2, "and_ln333_1_fu_228_p2");
    sc_trace(mVcdFile, trunc_ln334_fu_190_p1, "trunc_ln334_fu_190_p1");
    sc_trace(mVcdFile, select_ln336_fu_202_p3, "select_ln336_fu_202_p3");
    sc_trace(mVcdFile, reg_V_1_fu_242_p1, "reg_V_1_fu_242_p1");
    sc_trace(mVcdFile, p_Result_2_fu_257_p4, "p_Result_2_fu_257_p4");
    sc_trace(mVcdFile, trunc_ln318_1_fu_271_p1, "trunc_ln318_1_fu_271_p1");
    sc_trace(mVcdFile, trunc_ln310_1_fu_245_p1, "trunc_ln310_1_fu_245_p1");
    sc_trace(mVcdFile, exp_V_1_fu_267_p1, "exp_V_1_fu_267_p1");
    sc_trace(mVcdFile, sext_ln329_1_fu_299_p1, "sext_ln329_1_fu_299_p1");
    sc_trace(mVcdFile, tmp_1_fu_279_p3, "tmp_1_fu_279_p3");
    sc_trace(mVcdFile, zext_ln334_1_fu_321_p1, "zext_ln334_1_fu_321_p1");
    sc_trace(mVcdFile, lshr_ln334_1_fu_325_p2, "lshr_ln334_1_fu_325_p2");
    sc_trace(mVcdFile, tmp_7_fu_335_p3, "tmp_7_fu_335_p3");
    sc_trace(mVcdFile, icmp_ln333_1_fu_315_p2, "icmp_ln333_1_fu_315_p2");
    sc_trace(mVcdFile, xor_ln330_1_fu_357_p2, "xor_ln330_1_fu_357_p2");
    sc_trace(mVcdFile, and_ln333_2_fu_363_p2, "and_ln333_2_fu_363_p2");
    sc_trace(mVcdFile, and_ln333_3_fu_369_p2, "and_ln333_3_fu_369_p2");
    sc_trace(mVcdFile, trunc_ln334_1_fu_331_p1, "trunc_ln334_1_fu_331_p1");
    sc_trace(mVcdFile, select_ln336_1_fu_343_p3, "select_ln336_1_fu_343_p3");
    sc_trace(mVcdFile, sh_amt_1_fu_383_p2, "sh_amt_1_fu_383_p2");
    sc_trace(mVcdFile, tmp_3_fu_392_p4, "tmp_3_fu_392_p4");
    sc_trace(mVcdFile, sext_ln342_fu_388_p1, "sext_ln342_fu_388_p1");
    sc_trace(mVcdFile, icmp_ln343_fu_402_p2, "icmp_ln343_fu_402_p2");
    sc_trace(mVcdFile, shl_ln345_fu_408_p2, "shl_ln345_fu_408_p2");
    sc_trace(mVcdFile, xor_ln326_fu_427_p2, "xor_ln326_fu_427_p2");
    sc_trace(mVcdFile, and_ln330_fu_432_p2, "and_ln330_fu_432_p2");
    sc_trace(mVcdFile, select_ln326_fu_421_p3, "select_ln326_fu_421_p3");
    sc_trace(mVcdFile, or_ln332_fu_444_p2, "or_ln332_fu_444_p2");
    sc_trace(mVcdFile, select_ln330_fu_437_p3, "select_ln330_fu_437_p3");
    sc_trace(mVcdFile, select_ln343_fu_413_p3, "select_ln343_fu_413_p3");
    sc_trace(mVcdFile, sh_amt_3_fu_456_p2, "sh_amt_3_fu_456_p2");
    sc_trace(mVcdFile, tmp_6_fu_465_p4, "tmp_6_fu_465_p4");
    sc_trace(mVcdFile, sext_ln342_1_fu_461_p1, "sext_ln342_1_fu_461_p1");
    sc_trace(mVcdFile, icmp_ln343_1_fu_475_p2, "icmp_ln343_1_fu_475_p2");
    sc_trace(mVcdFile, shl_ln345_1_fu_481_p2, "shl_ln345_1_fu_481_p2");
    sc_trace(mVcdFile, xor_ln326_1_fu_500_p2, "xor_ln326_1_fu_500_p2");
    sc_trace(mVcdFile, and_ln330_1_fu_505_p2, "and_ln330_1_fu_505_p2");
    sc_trace(mVcdFile, select_ln326_1_fu_494_p3, "select_ln326_1_fu_494_p3");
    sc_trace(mVcdFile, or_ln332_1_fu_517_p2, "or_ln332_1_fu_517_p2");
    sc_trace(mVcdFile, select_ln330_1_fu_510_p3, "select_ln330_1_fu_510_p3");
    sc_trace(mVcdFile, select_ln343_1_fu_486_p3, "select_ln343_1_fu_486_p3");
    sc_trace(mVcdFile, sub_ln461_fu_529_p2, "sub_ln461_fu_529_p2");
    sc_trace(mVcdFile, sub_ln461_1_fu_541_p2, "sub_ln461_1_fu_541_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_monte_carlo_both_pri_fu_87;
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_monte_carlo_both_pri_fu_87_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
            grp_monte_carlo_both_pri_fu_87_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_monte_carlo_both_pri_fu_87_ap_ready.read())) {
            grp_monte_carlo_both_pri_fu_87_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        icmp_ln326_1_reg_615 = icmp_ln326_1_fu_287_p2.read();
        icmp_ln326_reg_573 = icmp_ln326_fu_146_p2.read();
        icmp_ln330_1_reg_626 = icmp_ln330_1_fu_303_p2.read();
        icmp_ln330_reg_584 = icmp_ln330_fu_162_p2.read();
        icmp_ln332_1_reg_631 = icmp_ln332_1_fu_309_p2.read();
        icmp_ln332_reg_589 = icmp_ln332_fu_168_p2.read();
        or_ln330_1_reg_636 = or_ln330_1_fu_351_p2.read();
        or_ln330_reg_594 = or_ln330_fu_210_p2.read();
        p_Result_1_reg_604 = reg_V_1_fu_242_p1.read().range(63, 63);
        p_Result_s_reg_562 = reg_V_fu_101_p1.read().range(63, 63);
        select_ln333_1_reg_641 = select_ln333_1_fu_375_p3.read();
        select_ln333_reg_599 = select_ln333_fu_234_p3.read();
        sh_amt_2_reg_621 = sh_amt_2_fu_293_p2.read();
        sh_amt_reg_579 = sh_amt_fu_152_p2.read();
        trunc_ln331_1_reg_609 = trunc_ln331_1_fu_275_p1.read();
        trunc_ln331_reg_567 = trunc_ln331_fu_134_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_87_ap_done.read())))) {
        result_call_reg_552 = grp_monte_carlo_both_pri_fu_87_ap_return_0.read();
        result_put_reg_557 = grp_monte_carlo_both_pri_fu_87_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        select_ln332_1_reg_652 = select_ln332_1_fu_521_p3.read();
        select_ln332_reg_646 = select_ln332_fu_448_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        tmp_V_1_reg_658 = tmp_V_1_fu_546_p3.read();
    }
}

void dut::thread_and_ln330_1_fu_505_p2() {
    and_ln330_1_fu_505_p2 = (icmp_ln330_1_reg_626.read() & xor_ln326_1_fu_500_p2.read());
}

void dut::thread_and_ln330_fu_432_p2() {
    and_ln330_fu_432_p2 = (icmp_ln330_reg_584.read() & xor_ln326_fu_427_p2.read());
}

void dut::thread_and_ln333_1_fu_228_p2() {
    and_ln333_1_fu_228_p2 = (and_ln333_fu_222_p2.read() & icmp_ln332_fu_168_p2.read());
}

void dut::thread_and_ln333_2_fu_363_p2() {
    and_ln333_2_fu_363_p2 = (icmp_ln333_1_fu_315_p2.read() & xor_ln330_1_fu_357_p2.read());
}

void dut::thread_and_ln333_3_fu_369_p2() {
    and_ln333_3_fu_369_p2 = (and_ln333_2_fu_363_p2.read() & icmp_ln332_1_fu_309_p2.read());
}

void dut::thread_and_ln333_fu_222_p2() {
    and_ln333_fu_222_p2 = (icmp_ln333_fu_174_p2.read() & xor_ln330_fu_216_p2.read());
}

void dut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dut::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dut::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dut::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dut::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()));
}

void dut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_exp_V_1_fu_267_p1() {
    exp_V_1_fu_267_p1 = esl_zext<12,11>(p_Result_2_fu_257_p4.read());
}

void dut::thread_exp_V_fu_126_p1() {
    exp_V_fu_126_p1 = esl_zext<12,11>(p_Result_s_9_fu_116_p4.read());
}

void dut::thread_grp_monte_carlo_both_pri_fu_87_ap_start() {
    grp_monte_carlo_both_pri_fu_87_ap_start = grp_monte_carlo_both_pri_fu_87_ap_start_reg.read();
}

void dut::thread_icmp_ln326_1_fu_287_p2() {
    icmp_ln326_1_fu_287_p2 = (!trunc_ln310_1_fu_245_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln310_1_fu_245_p1.read() == ap_const_lv63_0);
}

void dut::thread_icmp_ln326_fu_146_p2() {
    icmp_ln326_fu_146_p2 = (!trunc_ln310_fu_104_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln310_fu_104_p1.read() == ap_const_lv63_0);
}

void dut::thread_icmp_ln330_1_fu_303_p2() {
    icmp_ln330_1_fu_303_p2 = (!p_Result_2_fu_257_p4.read().is_01() || !ap_const_lv11_433.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_2_fu_257_p4.read() == ap_const_lv11_433);
}

void dut::thread_icmp_ln330_fu_162_p2() {
    icmp_ln330_fu_162_p2 = (!p_Result_s_9_fu_116_p4.read().is_01() || !ap_const_lv11_433.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_9_fu_116_p4.read() == ap_const_lv11_433);
}

void dut::thread_icmp_ln332_1_fu_309_p2() {
    icmp_ln332_1_fu_309_p2 = (!sh_amt_2_fu_293_p2.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): (sc_bigint<12>(sh_amt_2_fu_293_p2.read()) > sc_bigint<12>(ap_const_lv12_0));
}

void dut::thread_icmp_ln332_fu_168_p2() {
    icmp_ln332_fu_168_p2 = (!sh_amt_fu_152_p2.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): (sc_bigint<12>(sh_amt_fu_152_p2.read()) > sc_bigint<12>(ap_const_lv12_0));
}

void dut::thread_icmp_ln333_1_fu_315_p2() {
    icmp_ln333_1_fu_315_p2 = (!sh_amt_2_fu_293_p2.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_bigint<12>(sh_amt_2_fu_293_p2.read()) < sc_bigint<12>(ap_const_lv12_36));
}

void dut::thread_icmp_ln333_fu_174_p2() {
    icmp_ln333_fu_174_p2 = (!sh_amt_fu_152_p2.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_bigint<12>(sh_amt_fu_152_p2.read()) < sc_bigint<12>(ap_const_lv12_36));
}

void dut::thread_icmp_ln343_1_fu_475_p2() {
    icmp_ln343_1_fu_475_p2 = (!tmp_6_fu_465_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<1>(): (sc_bigint<7>(tmp_6_fu_465_p4.read()) < sc_bigint<7>(ap_const_lv7_1));
}

void dut::thread_icmp_ln343_fu_402_p2() {
    icmp_ln343_fu_402_p2 = (!tmp_3_fu_392_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<1>(): (sc_bigint<7>(tmp_3_fu_392_p4.read()) < sc_bigint<7>(ap_const_lv7_1));
}

void dut::thread_lshr_ln334_1_fu_325_p2() {
    lshr_ln334_1_fu_325_p2 = (!zext_ln334_1_fu_321_p1.read().is_01())? sc_lv<53>(): tmp_1_fu_279_p3.read() >> (unsigned short)zext_ln334_1_fu_321_p1.read().to_uint();
}

void dut::thread_lshr_ln334_fu_184_p2() {
    lshr_ln334_fu_184_p2 = (!zext_ln334_fu_180_p1.read().is_01())? sc_lv<53>(): tmp_fu_138_p3.read() >> (unsigned short)zext_ln334_fu_180_p1.read().to_uint();
}

void dut::thread_or_ln330_1_fu_351_p2() {
    or_ln330_1_fu_351_p2 = (icmp_ln326_1_fu_287_p2.read() | icmp_ln330_1_fu_303_p2.read());
}

void dut::thread_or_ln330_fu_210_p2() {
    or_ln330_fu_210_p2 = (icmp_ln326_fu_146_p2.read() | icmp_ln330_fu_162_p2.read());
}

void dut::thread_or_ln332_1_fu_517_p2() {
    or_ln332_1_fu_517_p2 = (or_ln330_1_reg_636.read() | icmp_ln332_1_reg_631.read());
}

void dut::thread_or_ln332_fu_444_p2() {
    or_ln332_fu_444_p2 = (or_ln330_reg_594.read() | icmp_ln332_reg_589.read());
}

void dut::thread_p_Result_2_fu_257_p4() {
    p_Result_2_fu_257_p4 = reg_V_1_fu_242_p1.read().range(62, 52);
}

void dut::thread_p_Result_s_9_fu_116_p4() {
    p_Result_s_9_fu_116_p4 = reg_V_fu_101_p1.read().range(62, 52);
}

void dut::thread_reg_V_1_fu_242_p1() {
    reg_V_1_fu_242_p1 = result_put_reg_557.read();
}

void dut::thread_reg_V_fu_101_p1() {
    reg_V_fu_101_p1 = result_call_reg_552.read();
}

void dut::thread_select_ln326_1_fu_494_p3() {
    select_ln326_1_fu_494_p3 = (!icmp_ln326_1_reg_615.read()[0].is_01())? sc_lv<32>(): ((icmp_ln326_1_reg_615.read()[0].to_bool())? ap_const_lv32_0: select_ln333_1_reg_641.read());
}

void dut::thread_select_ln326_fu_421_p3() {
    select_ln326_fu_421_p3 = (!icmp_ln326_reg_573.read()[0].is_01())? sc_lv<32>(): ((icmp_ln326_reg_573.read()[0].to_bool())? ap_const_lv32_0: select_ln333_reg_599.read());
}

void dut::thread_select_ln330_1_fu_510_p3() {
    select_ln330_1_fu_510_p3 = (!and_ln330_1_fu_505_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln330_1_fu_505_p2.read()[0].to_bool())? trunc_ln331_1_reg_609.read(): select_ln326_1_fu_494_p3.read());
}

void dut::thread_select_ln330_fu_437_p3() {
    select_ln330_fu_437_p3 = (!and_ln330_fu_432_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln330_fu_432_p2.read()[0].to_bool())? trunc_ln331_reg_567.read(): select_ln326_fu_421_p3.read());
}

void dut::thread_select_ln332_1_fu_521_p3() {
    select_ln332_1_fu_521_p3 = (!or_ln332_1_fu_517_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln332_1_fu_517_p2.read()[0].to_bool())? select_ln330_1_fu_510_p3.read(): select_ln343_1_fu_486_p3.read());
}

void dut::thread_select_ln332_fu_448_p3() {
    select_ln332_fu_448_p3 = (!or_ln332_fu_444_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln332_fu_444_p2.read()[0].to_bool())? select_ln330_fu_437_p3.read(): select_ln343_fu_413_p3.read());
}

void dut::thread_select_ln333_1_fu_375_p3() {
    select_ln333_1_fu_375_p3 = (!and_ln333_3_fu_369_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln333_3_fu_369_p2.read()[0].to_bool())? trunc_ln334_1_fu_331_p1.read(): select_ln336_1_fu_343_p3.read());
}

void dut::thread_select_ln333_fu_234_p3() {
    select_ln333_fu_234_p3 = (!and_ln333_1_fu_228_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln333_1_fu_228_p2.read()[0].to_bool())? trunc_ln334_fu_190_p1.read(): select_ln336_fu_202_p3.read());
}

void dut::thread_select_ln336_1_fu_343_p3() {
    select_ln336_1_fu_343_p3 = (!tmp_7_fu_335_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_7_fu_335_p3.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void dut::thread_select_ln336_fu_202_p3() {
    select_ln336_fu_202_p3 = (!tmp_4_fu_194_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_4_fu_194_p3.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void dut::thread_select_ln343_1_fu_486_p3() {
    select_ln343_1_fu_486_p3 = (!icmp_ln343_1_fu_475_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln343_1_fu_475_p2.read()[0].to_bool())? shl_ln345_1_fu_481_p2.read(): ap_const_lv32_0);
}

void dut::thread_select_ln343_fu_413_p3() {
    select_ln343_fu_413_p3 = (!icmp_ln343_fu_402_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln343_fu_402_p2.read()[0].to_bool())? shl_ln345_fu_408_p2.read(): ap_const_lv32_0);
}

void dut::thread_sext_ln329_1_fu_299_p1() {
    sext_ln329_1_fu_299_p1 = esl_sext<32,12>(sh_amt_2_fu_293_p2.read());
}

void dut::thread_sext_ln329_fu_158_p1() {
    sext_ln329_fu_158_p1 = esl_sext<32,12>(sh_amt_fu_152_p2.read());
}

void dut::thread_sext_ln342_1_fu_461_p1() {
    sext_ln342_1_fu_461_p1 = esl_sext<32,12>(sh_amt_3_fu_456_p2.read());
}

void dut::thread_sext_ln342_fu_388_p1() {
    sext_ln342_fu_388_p1 = esl_sext<32,12>(sh_amt_1_fu_383_p2.read());
}

void dut::thread_sh_amt_1_fu_383_p2() {
    sh_amt_1_fu_383_p2 = (!ap_const_lv12_0.is_01() || !sh_amt_reg_579.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_0) - sc_bigint<12>(sh_amt_reg_579.read()));
}

void dut::thread_sh_amt_2_fu_293_p2() {
    sh_amt_2_fu_293_p2 = (!ap_const_lv12_433.is_01() || !exp_V_1_fu_267_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(exp_V_1_fu_267_p1.read()));
}

void dut::thread_sh_amt_3_fu_456_p2() {
    sh_amt_3_fu_456_p2 = (!ap_const_lv12_0.is_01() || !sh_amt_2_reg_621.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_0) - sc_bigint<12>(sh_amt_2_reg_621.read()));
}

void dut::thread_sh_amt_fu_152_p2() {
    sh_amt_fu_152_p2 = (!ap_const_lv12_433.is_01() || !exp_V_fu_126_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(exp_V_fu_126_p1.read()));
}

void dut::thread_shl_ln345_1_fu_481_p2() {
    shl_ln345_1_fu_481_p2 = (!sext_ln342_1_fu_461_p1.read().is_01())? sc_lv<32>(): trunc_ln331_1_reg_609.read() << (unsigned short)sext_ln342_1_fu_461_p1.read().to_uint();
}

void dut::thread_shl_ln345_fu_408_p2() {
    shl_ln345_fu_408_p2 = (!sext_ln342_fu_388_p1.read().is_01())? sc_lv<32>(): trunc_ln331_reg_567.read() << (unsigned short)sext_ln342_fu_388_p1.read().to_uint();
}

void dut::thread_strm_out_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        strm_out_V_V_blk_n = strm_out_V_V_full_n.read();
    } else {
        strm_out_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_out_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_din = tmp_V_1_reg_658.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_din = tmp_V_fu_534_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_din = ap_const_lv32_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_87_ap_done.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_din = ap_const_lv32_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_din = ap_const_lv32_64;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read())))) {
        strm_out_V_V_din = ap_const_lv32_989680;
    } else {
        strm_out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_strm_out_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_87_ap_done.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_write = ap_const_logic_1;
    } else {
        strm_out_V_V_write = ap_const_logic_0;
    }
}

void dut::thread_sub_ln461_1_fu_541_p2() {
    sub_ln461_1_fu_541_p2 = (!ap_const_lv32_0.is_01() || !select_ln332_1_reg_652.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(select_ln332_1_reg_652.read()));
}

void dut::thread_sub_ln461_fu_529_p2() {
    sub_ln461_fu_529_p2 = (!ap_const_lv32_0.is_01() || !select_ln332_reg_646.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(select_ln332_reg_646.read()));
}

void dut::thread_tmp_1_fu_279_p3() {
    tmp_1_fu_279_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln318_1_fu_271_p1.read());
}

void dut::thread_tmp_3_fu_392_p4() {
    tmp_3_fu_392_p4 = sh_amt_1_fu_383_p2.read().range(11, 5);
}

void dut::thread_tmp_4_fu_194_p3() {
    tmp_4_fu_194_p3 = reg_V_fu_101_p1.read().range(63, 63);
}

void dut::thread_tmp_6_fu_465_p4() {
    tmp_6_fu_465_p4 = sh_amt_3_fu_456_p2.read().range(11, 5);
}

void dut::thread_tmp_7_fu_335_p3() {
    tmp_7_fu_335_p3 = reg_V_1_fu_242_p1.read().range(63, 63);
}

void dut::thread_tmp_V_1_fu_546_p3() {
    tmp_V_1_fu_546_p3 = (!p_Result_1_reg_604.read()[0].is_01())? sc_lv<32>(): ((p_Result_1_reg_604.read()[0].to_bool())? sub_ln461_1_fu_541_p2.read(): select_ln332_1_reg_652.read());
}

void dut::thread_tmp_V_fu_534_p3() {
    tmp_V_fu_534_p3 = (!p_Result_s_reg_562.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_562.read()[0].to_bool())? sub_ln461_fu_529_p2.read(): select_ln332_reg_646.read());
}

void dut::thread_tmp_fu_138_p3() {
    tmp_fu_138_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln318_fu_130_p1.read());
}

void dut::thread_trunc_ln310_1_fu_245_p1() {
    trunc_ln310_1_fu_245_p1 = reg_V_1_fu_242_p1.read().range(63-1, 0);
}

void dut::thread_trunc_ln310_fu_104_p1() {
    trunc_ln310_fu_104_p1 = reg_V_fu_101_p1.read().range(63-1, 0);
}

void dut::thread_trunc_ln318_1_fu_271_p1() {
    trunc_ln318_1_fu_271_p1 = reg_V_1_fu_242_p1.read().range(52-1, 0);
}

void dut::thread_trunc_ln318_fu_130_p1() {
    trunc_ln318_fu_130_p1 = reg_V_fu_101_p1.read().range(52-1, 0);
}

void dut::thread_trunc_ln331_1_fu_275_p1() {
    trunc_ln331_1_fu_275_p1 = reg_V_1_fu_242_p1.read().range(32-1, 0);
}

void dut::thread_trunc_ln331_fu_134_p1() {
    trunc_ln331_fu_134_p1 = reg_V_fu_101_p1.read().range(32-1, 0);
}

void dut::thread_trunc_ln334_1_fu_331_p1() {
    trunc_ln334_1_fu_331_p1 = lshr_ln334_1_fu_325_p2.read().range(32-1, 0);
}

void dut::thread_trunc_ln334_fu_190_p1() {
    trunc_ln334_fu_190_p1 = lshr_ln334_fu_184_p2.read().range(32-1, 0);
}

void dut::thread_xor_ln326_1_fu_500_p2() {
    xor_ln326_1_fu_500_p2 = (icmp_ln326_1_reg_615.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln326_fu_427_p2() {
    xor_ln326_fu_427_p2 = (icmp_ln326_reg_573.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln330_1_fu_357_p2() {
    xor_ln330_1_fu_357_p2 = (or_ln330_1_fu_351_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln330_fu_216_p2() {
    xor_ln330_fu_216_p2 = (or_ln330_fu_210_p2.read() ^ ap_const_lv1_1);
}

void dut::thread_zext_ln334_1_fu_321_p1() {
    zext_ln334_1_fu_321_p1 = esl_zext<53,32>(sext_ln329_1_fu_299_p1.read());
}

void dut::thread_zext_ln334_fu_180_p1() {
    zext_ln334_fu_180_p1 = esl_zext<53,32>(sext_ln329_fu_158_p1.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_out_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_monte_carlo_both_pri_fu_87_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_din\" :  \"" << strm_out_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_V_full_n\" :  \"" << strm_out_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_write\" :  \"" << strm_out_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

